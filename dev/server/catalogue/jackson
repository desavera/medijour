[INFO] Scanning for projects...
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building medijour-catalogue 0.0.1-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ medijour-catalogue ---
[INFO] Deleting /home/mvera/oficina/medijour/dev/server/catalogue/target
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ medijour-catalogue ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ medijour-catalogue ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 11 source files to /home/mvera/oficina/medijour/dev/server/catalogue/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ medijour-catalogue ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/mvera/oficina/medijour/dev/server/catalogue/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ medijour-catalogue ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.18.1:test (default-test) @ medijour-catalogue ---
[INFO] No tests to run.
[INFO] 
[INFO] --- maven-jar-plugin:2.5:jar (default-jar) @ medijour-catalogue ---
[INFO] Building jar: /home/mvera/oficina/medijour/dev/server/catalogue/target/medijour-catalogue-0.0.1-SNAPSHOT.jar
[INFO] 
[INFO] --- spring-boot-maven-plugin:1.3.5.RELEASE:repackage (default) @ medijour-catalogue ---
[INFO] 
[INFO] --- maven-install-plugin:2.5.2:install (default-install) @ medijour-catalogue ---
[INFO] Installing /home/mvera/oficina/medijour/dev/server/catalogue/target/medijour-catalogue-0.0.1-SNAPSHOT.jar to /home/mvera/.m2/repository/com/crossover/medijour/medijour-catalogue/0.0.1-SNAPSHOT/medijour-catalogue-0.0.1-SNAPSHOT.jar
[INFO] Installing /home/mvera/oficina/medijour/dev/server/catalogue/pom.xml to /home/mvera/.m2/repository/com/crossover/medijour/medijour-catalogue/0.0.1-SNAPSHOT/medijour-catalogue-0.0.1-SNAPSHOT.pom
[INFO] 
[INFO] >>> spring-boot-maven-plugin:1.3.5.RELEASE:run (default-cli) @ medijour-catalogue >>>
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ medijour-catalogue ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:compile (default-compile) @ medijour-catalogue ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ medijour-catalogue ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/mvera/oficina/medijour/dev/server/catalogue/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.1:testCompile (default-testCompile) @ medijour-catalogue ---
[INFO] No sources to compile
[INFO] 
[INFO] <<< spring-boot-maven-plugin:1.3.5.RELEASE:run (default-cli) @ medijour-catalogue <<<
[INFO] 
[INFO] --- spring-boot-maven-plugin:1.3.5.RELEASE:run (default-cli) @ medijour-catalogue ---

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v1.3.5.RELEASE)

2016-08-15 12:48:31.382 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:31.395 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:31.396 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:31.409 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:31.409 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:31.560  INFO 18133 --- [           main] com.crossover.medijour.service.App       : Starting App on fz4k with PID 18133 (/home/mvera/oficina/medijour/dev/server/catalogue/target/classes started by mvera in /home/mvera/oficina/medijour/dev/server/catalogue)
2016-08-15 12:48:31.561  INFO 18133 --- [           main] com.crossover.medijour.service.App       : No active profile set, falling back to default profiles: default
2016-08-15 12:48:31.709  INFO 18133 --- [           main] ationConfigEmbeddedWebApplicationContext : Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@490c293f: startup date [Mon Aug 15 12:48:31 BRT 2016]; root of context hierarchy
2016-08-15 12:48:31.799 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Adding [class path resource [application.properties]] PropertySource with lowest search precedence
2016-08-15 12:48:31.800 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Adding [class path resource [auth0.properties]] PropertySource with search precedence immediately higher than [class path resource [application.properties]]
2016-08-15 12:48:33.064 DEBUG 18133 --- [kground-preinit] o.h.v.i.e.r.DefaultTraversableResolver   : Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2016-08-15 12:48:33.074 DEBUG 18133 --- [kground-preinit] o.h.v.i.e.r.DefaultTraversableResolver   : Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2016-08-15 12:48:33.667  INFO 18133 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'auth0Client' with a different definition: replacing [Generic bean: class [com.crossover.medijour.service.Auth0Client]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [/home/mvera/oficina/medijour/dev/server/catalogue/target/classes/com/crossover/medijour/service/Auth0Client.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=appConfig; factoryMethodName=auth0Client; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/crossover/medijour/service/AppConfig.class]]
2016-08-15 12:48:33.960  INFO 18133 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'managementServletContext' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcHypermediaManagementContextConfiguration.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration; factoryMethodName=managementServletContext; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/actuate/autoconfigure/EndpointWebMvcAutoConfiguration.class]]
2016-08-15 12:48:34.590 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Adding [applicationConfig: [classpath:/application.properties]] PropertySource with search precedence immediately lower than [applicationConfigurationProperties]
2016-08-15 12:48:34.590 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Removing [applicationConfigurationProperties] PropertySource
2016-08-15 12:48:34.590 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Removing [defaultProperties] PropertySource
2016-08-15 12:48:34.826  INFO 18133 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [class org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6f326825] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-08-15 12:48:34.888  INFO 18133 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [class org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7e0305f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-08-15 12:48:34.899  INFO 18133 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'objectPostProcessor' of type [class org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-08-15 12:48:34.901  INFO 18133 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1b4ba1df' of type [class org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-08-15 12:48:34.911  INFO 18133 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [class org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2cb4d311] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-08-15 12:48:34.928  INFO 18133 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'methodSecurityMetadataSource' of type [class org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2016-08-15 12:48:35.044 DEBUG 18133 --- [           main] o.h.v.i.e.r.DefaultTraversableResolver   : Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2016-08-15 12:48:35.044 DEBUG 18133 --- [           main] o.h.v.i.e.r.DefaultTraversableResolver   : Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2016-08-15 12:48:35.046 DEBUG 18133 --- [           main] o.h.v.internal.engine.ConfigurationImpl  : Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2016-08-15 12:48:35.046 DEBUG 18133 --- [           main] o.h.v.internal.engine.ConfigurationImpl  : Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2016-08-15 12:48:35.048 DEBUG 18133 --- [           main] o.h.v.internal.engine.ConfigurationImpl  : Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy81
2016-08-15 12:48:35.051 DEBUG 18133 --- [           main] o.h.v.internal.xml.ValidationXmlParser   : Trying to load META-INF/validation.xml for XML based Validator configuration.
2016-08-15 12:48:35.053 DEBUG 18133 --- [           main] o.h.v.internal.xml.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via user class loader
2016-08-15 12:48:35.053 DEBUG 18133 --- [           main] o.h.v.internal.xml.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via TCCL
2016-08-15 12:48:35.053 DEBUG 18133 --- [           main] o.h.v.internal.xml.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2016-08-15 12:48:35.054 DEBUG 18133 --- [           main] o.h.v.internal.xml.ValidationXmlParser   : No META-INF/validation.xml found. Using annotation based configuration only.
2016-08-15 12:48:35.438  INFO 18133 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat initialized with port(s): 8082 (http)
2016-08-15 12:48:35.464  INFO 18133 --- [           main] o.apache.catalina.core.StandardService   : Starting service Tomcat
2016-08-15 12:48:35.466  INFO 18133 --- [           main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.0.33
2016-08-15 12:48:35.585  INFO 18133 --- [ost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2016-08-15 12:48:35.589 DEBUG 18133 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Published root WebApplicationContext as ServletContext attribute with name [org.springframework.web.context.WebApplicationContext.ROOT]
2016-08-15 12:48:35.593  INFO 18133 --- [ost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3884 ms
2016-08-15 12:48:36.327 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.327 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.328 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:36.328 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:36.328 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:36.526 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.526 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.526 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:36.527 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:36.527 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:36.539 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.539 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.539 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:36.539 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:36.540 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:36.546 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.548 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.549 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:36.549 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:36.549 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:36.568 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.569 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.569 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:36.569 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:36.569 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:36.628 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.628 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.628 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:36.628 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:36.628 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:36.694 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.695 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.695 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:36.695 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:36.695 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:36.711 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.711 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.712 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:36.712 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:36.712 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:36.732  INFO 18133 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'metricFilter' to: [/*]
2016-08-15 12:48:36.737  INFO 18133 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'characterEncodingFilter' to: [/*]
2016-08-15 12:48:36.737  INFO 18133 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2016-08-15 12:48:36.738  INFO 18133 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2016-08-15 12:48:36.738  INFO 18133 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'requestContextFilter' to: [/*]
2016-08-15 12:48:36.739 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.739 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:36.739 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:36.739 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:36.739 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:36.739  INFO 18133 --- [ost-startStop-1] .e.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2016-08-15 12:48:36.739  INFO 18133 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'webRequestLoggingFilter' to: [/*]
2016-08-15 12:48:36.739  INFO 18133 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Filter auth0AuthenticationFilter was not registered (disabled)
2016-08-15 12:48:36.740  INFO 18133 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'auth0CORSFilter' to: [/*]
2016-08-15 12:48:36.740  INFO 18133 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'simpleCORSFilter' to: [/*]
2016-08-15 12:48:36.740  INFO 18133 --- [ost-startStop-1] o.s.b.c.embedded.FilterRegistrationBean  : Mapping filter: 'applicationContextIdFilter' to: [/*]
2016-08-15 12:48:36.740  INFO 18133 --- [ost-startStop-1] o.s.b.c.e.ServletRegistrationBean        : Mapping servlet: 'dispatcherServlet' to [/]
2016-08-15 12:48:36.785 DEBUG 18133 --- [ost-startStop-1] o.s.web.filter.DelegatingFilterProxy     : Initializing filter 'springSecurityFilterChain'
2016-08-15 12:48:37.032 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.032 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.033 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.033 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.033 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.047 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.048 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.048 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.048 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.049 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.051 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.052 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.052 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.053 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.053 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.248 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.248 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.248 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.248 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.248 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.249 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.249 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.249 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.249 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.250 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.251 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.251 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.252 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.252 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.252 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.255  INFO 18133 --- [ost-startStop-1] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2016-08-15 12:48:37.256  INFO 18133 --- [ost-startStop-1] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: Ant [pattern='/**', OPTIONS], []
2016-08-15 12:48:37.264 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.264 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.265 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.265 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.268 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.283 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.283 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.283 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.283 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.283 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.294 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.294 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.294 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.294 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.294 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.298 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.298 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.298 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.298 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.298 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.304 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.305 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.305 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.305 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.305 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.309 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.309 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.309 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.309 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.309 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.318 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.319 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.320 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.320 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.320 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.355 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.355 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.355 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.355 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.355 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.361  INFO 18133 --- [ost-startStop-1] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@6e2166c3, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1aea6365, org.springframework.security.web.context.SecurityContextPersistenceFilter@2306a3b5, org.springframework.security.web.header.HeaderWriterFilter@7b87865, org.springframework.security.web.authentication.logout.LogoutFilter@3a9f173d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7c411fd5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@791d3251, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@466273c0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@71e371ad, org.springframework.security.web.session.SessionManagementFilter@3ae2aafe, org.springframework.security.web.access.ExceptionTranslationFilter@1d1f8dfa, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@27fa0057]
2016-08-15 12:48:37.362 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.362 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.363 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.363 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.363 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.364 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.364 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.364 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.364 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.364 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.365 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.365 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.366 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.366 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.366 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.366 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.366 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.366 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.366 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.372 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.372 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.373 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.373 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.373 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.373 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.374 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.374 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.374 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.374 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.374 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.375 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.375 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.375 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.375 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.376 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.379  INFO 18133 --- [ost-startStop-1] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4654bd66, com.auth0.spring.security.api.Auth0CORSFilter@1b89affe, org.springframework.security.web.context.SecurityContextPersistenceFilter@10e2ff6c, com.auth0.spring.security.api.Auth0AuthenticationFilter@3b99ad58, org.springframework.security.web.header.HeaderWriterFilter@7f065821, org.springframework.security.web.authentication.logout.LogoutFilter@11e1b405, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@a1810b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4dab166e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5d12e098, org.springframework.security.web.session.SessionManagementFilter@35bd3573, org.springframework.security.web.access.ExceptionTranslationFilter@7c2d9fc4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@285739a]
2016-08-15 12:48:37.380 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletConfigInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.383 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [servletContextInitParams] PropertySource with lowest search precedence
2016-08-15 12:48:37.383 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemProperties] PropertySource with lowest search precedence
2016-08-15 12:48:37.384 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Adding [systemEnvironment] PropertySource with lowest search precedence
2016-08-15 12:48:37.384 DEBUG 18133 --- [ost-startStop-1] o.s.w.c.s.StandardServletEnvironment     : Initialized StandardServletEnvironment with PropertySources [servletConfigInitParams,servletContextInitParams,systemProperties,systemEnvironment]
2016-08-15 12:48:37.386  WARN 18133 --- [ost-startStop-1] o.s.s.c.a.web.builders.WebSecurity       : 

********************************************************************
**********        Security debugging is enabled.       *************
**********    This may include sensitive information.  *************
**********      Do not use in a production system!     *************
********************************************************************


2016-08-15 12:48:37.389 DEBUG 18133 --- [ost-startStop-1] o.s.web.filter.DelegatingFilterProxy     : Filter 'springSecurityFilterChain' configured successfully
2016-08-15 12:48:37.395 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Replacing [servletContextInitParams] PropertySource with [servletContextInitParams]
2016-08-15 12:48:37.712  WARN 18133 --- [           main] o.a.tomcat.jdbc.pool.ConnectionPool      : initialSize is larger than maxActive, setting initialSize to: 1
2016-08-15 12:48:37.712  WARN 18133 --- [           main] o.a.tomcat.jdbc.pool.ConnectionPool      : minIdle is larger than maxActive, setting minIdle to: 1
2016-08-15 12:48:38.138  INFO 18133 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2016-08-15 12:48:38.153 DEBUG 18133 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: java.net.URLClassLoader@29fe1b80
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.tomcat.jdbc.pool.DataSource@26ece61a{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=1; maxIdle=1; minIdle=1; initialSize=1; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=5000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://localhost:3306/medijourdb; username=medijour; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=30000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/home/mvera/.m2/repository/com/crossover/medijour/medijoursdk/1.0.0/medijoursdk-1.0.0.jar
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.crossover.medijour.service.Journals
		com.crossover.medijour.service.Publisher
		com.crossover.medijour.service.Subscription
		com.crossover.medijour.service.Subscriber]
	Mapping files names []
	Properties []
2016-08-15 12:48:38.177 DEBUG 18133 --- [           main] o.h.i.internal.IntegratorServiceImpl     : Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
2016-08-15 12:48:38.179 DEBUG 18133 --- [           main] o.h.i.internal.IntegratorServiceImpl     : Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
2016-08-15 12:48:38.183 DEBUG 18133 --- [           main] o.h.i.internal.IntegratorServiceImpl     : Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
2016-08-15 12:48:38.183 DEBUG 18133 --- [           main] o.h.i.internal.IntegratorServiceImpl     : Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
2016-08-15 12:48:38.201 DEBUG 18133 --- [           main] o.h.b.r.s.internal.StrategySelectorImpl  : Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
2016-08-15 12:48:38.201 DEBUG 18133 --- [           main] o.h.b.r.s.internal.StrategySelectorImpl  : Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
2016-08-15 12:48:38.251  INFO 18133 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {4.3.11.Final}
2016-08-15 12:48:38.253  INFO 18133 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2016-08-15 12:48:38.255  INFO 18133 --- [           main] org.hibernate.cfg.Environment            : HHH000021: Bytecode provider name : javassist
2016-08-15 12:48:38.474 DEBUG 18133 --- [           main] o.hibernate.service.spi.ServiceBinding   : Overriding existing service binding [org.hibernate.secure.spi.JaccService]
2016-08-15 12:48:38.502 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BooleanType@6a1de638
2016-08-15 12:48:38.502 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration boolean -> org.hibernate.type.BooleanType@6a1de638
2016-08-15 12:48:38.502 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@6a1de638
2016-08-15 12:48:38.503 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3d552bb4
2016-08-15 12:48:38.504 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration true_false -> org.hibernate.type.TrueFalseType@da9e8b1
2016-08-15 12:48:38.505 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration yes_no -> org.hibernate.type.YesNoType@49ec804d
2016-08-15 12:48:38.506 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.ByteType@e0a0294
2016-08-15 12:48:38.506 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte -> org.hibernate.type.ByteType@e0a0294
2016-08-15 12:48:38.506 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@e0a0294
2016-08-15 12:48:38.507 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration character -> org.hibernate.type.CharacterType@5d8b754d
2016-08-15 12:48:38.507 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char -> org.hibernate.type.CharacterType@5d8b754d
2016-08-15 12:48:38.507 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@5d8b754d
2016-08-15 12:48:38.509 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.ShortType@4a9d1ac2
2016-08-15 12:48:38.509 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration short -> org.hibernate.type.ShortType@4a9d1ac2
2016-08-15 12:48:38.509 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Short -> org.hibernate.type.ShortType@4a9d1ac2
2016-08-15 12:48:38.510 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration integer -> org.hibernate.type.IntegerType@7c21b882
2016-08-15 12:48:38.510 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration int -> org.hibernate.type.IntegerType@7c21b882
2016-08-15 12:48:38.510 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@7c21b882
2016-08-15 12:48:38.512 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.LongType@37446266
2016-08-15 12:48:38.512 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration long -> org.hibernate.type.LongType@37446266
2016-08-15 12:48:38.512 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Long -> org.hibernate.type.LongType@37446266
2016-08-15 12:48:38.513 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.FloatType@4d7c8b4c
2016-08-15 12:48:38.514 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration float -> org.hibernate.type.FloatType@4d7c8b4c
2016-08-15 12:48:38.514 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Float -> org.hibernate.type.FloatType@4d7c8b4c
2016-08-15 12:48:38.515 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.DoubleType@7a876604
2016-08-15 12:48:38.515 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration double -> org.hibernate.type.DoubleType@7a876604
2016-08-15 12:48:38.515 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@7a876604
2016-08-15 12:48:38.517 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@6855a4f9
2016-08-15 12:48:38.517 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@6855a4f9
2016-08-15 12:48:38.518 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5df4c33
2016-08-15 12:48:38.518 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5df4c33
2016-08-15 12:48:38.519 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration string -> org.hibernate.type.StringType@7393507a
2016-08-15 12:48:38.519 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.String -> org.hibernate.type.StringType@7393507a
2016-08-15 12:48:38.520 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nstring -> org.hibernate.type.StringNVarcharType@6e6cb7ce
2016-08-15 12:48:38.520 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5ecf970f
2016-08-15 12:48:38.521 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration url -> org.hibernate.type.UrlType@40e38ee3
2016-08-15 12:48:38.522 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.net.URL -> org.hibernate.type.UrlType@40e38ee3
2016-08-15 12:48:38.523 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration date -> org.hibernate.type.DateType@26c9c336
2016-08-15 12:48:38.523 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Date -> org.hibernate.type.DateType@26c9c336
2016-08-15 12:48:38.525 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration time -> org.hibernate.type.TimeType@2bcee3d8
2016-08-15 12:48:38.525 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Time -> org.hibernate.type.TimeType@2bcee3d8
2016-08-15 12:48:38.526 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timestamp -> org.hibernate.type.TimestampType@493d3fe0
2016-08-15 12:48:38.526 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@493d3fe0
2016-08-15 12:48:38.527 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Date -> org.hibernate.type.TimestampType@493d3fe0
2016-08-15 12:48:38.528 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@1265a1b0
2016-08-15 12:48:38.529 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar -> org.hibernate.type.CalendarType@1652458b
2016-08-15 12:48:38.529 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1652458b
2016-08-15 12:48:38.529 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1652458b
2016-08-15 12:48:38.530 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@63b4a734
2016-08-15 12:48:38.531 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration locale -> org.hibernate.type.LocaleType@3580b42c
2016-08-15 12:48:38.531 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@3580b42c
2016-08-15 12:48:38.532 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration currency -> org.hibernate.type.CurrencyType@5ce10f75
2016-08-15 12:48:38.532 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@5ce10f75
2016-08-15 12:48:38.532 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration timezone -> org.hibernate.type.TimeZoneType@182f0667
2016-08-15 12:48:38.533 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@182f0667
2016-08-15 12:48:38.533 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration class -> org.hibernate.type.ClassType@10916992
2016-08-15 12:48:38.533 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Class -> org.hibernate.type.ClassType@10916992
2016-08-15 12:48:38.535 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@342428a1
2016-08-15 12:48:38.535 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@342428a1
2016-08-15 12:48:38.535 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@7f4669b6
2016-08-15 12:48:38.536 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@6dcd4c6f
2016-08-15 12:48:38.538 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration binary -> org.hibernate.type.BinaryType@7b36303
2016-08-15 12:48:38.538 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration byte[] -> org.hibernate.type.BinaryType@7b36303
2016-08-15 12:48:38.538 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [B -> org.hibernate.type.BinaryType@7b36303
2016-08-15 12:48:38.539 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@65942c62
2016-08-15 12:48:38.539 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@65942c62
2016-08-15 12:48:38.539 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@65942c62
2016-08-15 12:48:38.539 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration image -> org.hibernate.type.ImageType@6cfad7d8
2016-08-15 12:48:38.540 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration characters -> org.hibernate.type.CharArrayType@73e5fedb
2016-08-15 12:48:38.541 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration char[] -> org.hibernate.type.CharArrayType@73e5fedb
2016-08-15 12:48:38.541 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [C -> org.hibernate.type.CharArrayType@73e5fedb
2016-08-15 12:48:38.542 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@6065f2f4
2016-08-15 12:48:38.542 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@6065f2f4
2016-08-15 12:48:38.542 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@6065f2f4
2016-08-15 12:48:38.542 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration text -> org.hibernate.type.TextType@518e4278
2016-08-15 12:48:38.543 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration ntext -> org.hibernate.type.NTextType@32f95b6c
2016-08-15 12:48:38.547 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration blob -> org.hibernate.type.BlobType@5481430f
2016-08-15 12:48:38.547 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@5481430f
2016-08-15 12:48:38.548 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@28be4c72
2016-08-15 12:48:38.552 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration clob -> org.hibernate.type.ClobType@4f9f9a5d
2016-08-15 12:48:38.552 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@4f9f9a5d
2016-08-15 12:48:38.555 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration nclob -> org.hibernate.type.NClobType@53a59898
2016-08-15 12:48:38.556 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@53a59898
2016-08-15 12:48:38.556 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@4e39cf19
2016-08-15 12:48:38.556 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@6b4e6da8
2016-08-15 12:48:38.558 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration serializable -> org.hibernate.type.SerializableType@7856f432
2016-08-15 12:48:38.561 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration object -> org.hibernate.type.ObjectType@371edd86
2016-08-15 12:48:38.561 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@371edd86
2016-08-15 12:48:38.561 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@300c1f97
2016-08-15 12:48:38.561 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@71bf06fd
2016-08-15 12:48:38.561 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@18ce598e
2016-08-15 12:48:38.562 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4bdc2065
2016-08-15 12:48:38.562 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1b7c7e2e
2016-08-15 12:48:38.562 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@127d1b52
2016-08-15 12:48:38.562 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@781522ba
2016-08-15 12:48:38.562 DEBUG 18133 --- [           main] org.hibernate.type.BasicTypeRegistry     : Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@5260ead5
2016-08-15 12:48:38.581  INFO 18133 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {4.0.5.Final}
2016-08-15 12:48:38.594 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
2016-08-15 12:48:38.594 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
2016-08-15 12:48:38.595 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
2016-08-15 12:48:38.595 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
2016-08-15 12:48:38.596 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
2016-08-15 12:48:38.596 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
2016-08-15 12:48:38.597 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
2016-08-15 12:48:38.598 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
2016-08-15 12:48:38.598 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
2016-08-15 12:48:38.599 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
2016-08-15 12:48:38.599 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
2016-08-15 12:48:38.600 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
2016-08-15 12:48:38.600 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
2016-08-15 12:48:38.601 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
2016-08-15 12:48:38.602 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
2016-08-15 12:48:38.619 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Preparing to build session factory with filters : {}
2016-08-15 12:48:38.645 DEBUG 18133 --- [           main] o.h.e.jdbc.internal.JdbcServicesImpl     : Database ->
       name : MySQL
    version : 5.5.49-0ubuntu0.14.04.1
      major : 5
      minor : 5
2016-08-15 12:48:38.645 DEBUG 18133 --- [           main] o.h.e.jdbc.internal.JdbcServicesImpl     : Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.13 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
2016-08-15 12:48:38.645 DEBUG 18133 --- [           main] o.h.e.jdbc.internal.JdbcServicesImpl     : JDBC version : 3.0
2016-08-15 12:48:38.648 DEBUG 18133 --- [           main] o.h.e.j.c.i.StandardRefCursorSupport     : Unexpected error trying to gauge level of JDBC REF_CURSOR support : null
2016-08-15 12:48:38.664  INFO 18133 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL5Dialect
2016-08-15 12:48:38.673  INFO 18133 --- [           main] o.h.e.jdbc.internal.LobCreatorBuilder    : HHH000423: Disabling contextual LOB creation as JDBC driver reported JDBC version [3] less than 4
2016-08-15 12:48:38.706 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Processing hbm.xml files
2016-08-15 12:48:38.706 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Process annotated classes
2016-08-15 12:48:38.709 DEBUG 18133 --- [           main] org.hibernate.cfg.AnnotationBinder       : Binding entity from annotated class: com.crossover.medijour.service.Subscription
2016-08-15 12:48:38.729 DEBUG 18133 --- [           main] o.hibernate.cfg.annotations.QueryBinder  : Binding named query: Subscription.findAll => SELECT s FROM Subscription s
2016-08-15 12:48:38.737 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-08-15 12:48:38.743 DEBUG 18133 --- [           main] o.h.cfg.annotations.EntityBinder         : Import with entity name Subscription
2016-08-15 12:48:38.747 DEBUG 18133 --- [           main] o.h.cfg.annotations.EntityBinder         : Bind entity com.crossover.medijour.service.Subscription on table subscription
2016-08-15 12:48:38.770 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subscription), mappingColumn=id, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.773 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property id with lazy=false
2016-08-15 12:48:38.775 DEBUG 18133 --- [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.crossover.medijour.service.Subscription:id]
2016-08-15 12:48:38.776 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for id
2016-08-15 12:48:38.777 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property id
2016-08-15 12:48:38.782 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='jrnid', referencedColumn='', mappedBy=''}
2016-08-15 12:48:38.782 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subscription), mappingColumn=journal, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.785 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property journal
2016-08-15 12:48:38.785 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='subid', referencedColumn='', mappedBy=''}
2016-08-15 12:48:38.785 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subscription), mappingColumn=subscriber, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.785 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property subscriber
2016-08-15 12:48:38.787 DEBUG 18133 --- [           main] org.hibernate.cfg.AnnotationBinder       : Binding entity from annotated class: com.crossover.medijour.service.Publisher
2016-08-15 12:48:38.788 DEBUG 18133 --- [           main] o.hibernate.cfg.annotations.QueryBinder  : Binding named query: Publisher.findAll => SELECT p FROM Publisher p
2016-08-15 12:48:38.788 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-08-15 12:48:38.788 DEBUG 18133 --- [           main] o.h.cfg.annotations.EntityBinder         : Import with entity name Publisher
2016-08-15 12:48:38.788 DEBUG 18133 --- [           main] o.h.cfg.annotations.EntityBinder         : Bind entity com.crossover.medijour.service.Publisher on table publisher
2016-08-15 12:48:38.792 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(publisher), mappingColumn=id, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.792 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property id with lazy=false
2016-08-15 12:48:38.792 DEBUG 18133 --- [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.crossover.medijour.service.Publisher:id]
2016-08-15 12:48:38.792 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for id
2016-08-15 12:48:38.792 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property id
2016-08-15 12:48:38.792 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(publisher), mappingColumn=email, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.792 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property email with lazy=false
2016-08-15 12:48:38.793 DEBUG 18133 --- [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.crossover.medijour.service.Publisher:email]
2016-08-15 12:48:38.793 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for email
2016-08-15 12:48:38.793 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property email
2016-08-15 12:48:38.793 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='publisher'}
2016-08-15 12:48:38.793 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(publisher), mappingColumn=journals, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.794 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(publisher), mappingColumn=null, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.804 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(publisher), mappingColumn=element, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.804 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(publisher), mappingColumn=journals_KEY, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.804 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='journals_KEY', referencedColumn='null', mappedBy='null'}
2016-08-15 12:48:38.804 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='publisher'}
2016-08-15 12:48:38.804 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='publisher'}
2016-08-15 12:48:38.805 DEBUG 18133 --- [           main] o.h.cfg.annotations.CollectionBinder     : Collection role: com.crossover.medijour.service.Publisher.journals
2016-08-15 12:48:38.807 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property journals
2016-08-15 12:48:38.807 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(publisher), mappingColumn=name, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.808 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property name with lazy=false
2016-08-15 12:48:38.808 DEBUG 18133 --- [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.crossover.medijour.service.Publisher:name]
2016-08-15 12:48:38.808 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for name
2016-08-15 12:48:38.808 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property name
2016-08-15 12:48:38.808 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(publisher), mappingColumn=provunq, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.808 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property provunq with lazy=false
2016-08-15 12:48:38.808 DEBUG 18133 --- [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.crossover.medijour.service.Publisher:provunq]
2016-08-15 12:48:38.808 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for provunq
2016-08-15 12:48:38.808 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property provunq
2016-08-15 12:48:38.808 DEBUG 18133 --- [           main] org.hibernate.cfg.AnnotationBinder       : Binding entity from annotated class: com.crossover.medijour.service.Journals
2016-08-15 12:48:38.808 DEBUG 18133 --- [           main] o.hibernate.cfg.annotations.QueryBinder  : Binding named query: Journals.findAll => SELECT j FROM Journals j
2016-08-15 12:48:38.808 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-08-15 12:48:38.809 DEBUG 18133 --- [           main] o.h.cfg.annotations.EntityBinder         : Import with entity name Journals
2016-08-15 12:48:38.809 DEBUG 18133 --- [           main] o.h.cfg.annotations.EntityBinder         : Bind entity com.crossover.medijour.service.Journals on table journals
2016-08-15 12:48:38.810 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(journals), mappingColumn=id, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.810 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property id with lazy=false
2016-08-15 12:48:38.810 DEBUG 18133 --- [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.crossover.medijour.service.Journals:id]
2016-08-15 12:48:38.810 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for id
2016-08-15 12:48:38.810 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property id
2016-08-15 12:48:38.810 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(journals), mappingColumn=available, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.810 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property available with lazy=false
2016-08-15 12:48:38.810 DEBUG 18133 --- [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.crossover.medijour.service.Journals:available]
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for available
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property available
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(journals), mappingColumn=header, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property header with lazy=false
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.crossover.medijour.service.Journals:header]
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for header
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property header
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(journals), mappingColumn=path, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property path with lazy=false
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.crossover.medijour.service.Journals:path]
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for path
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property path
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='pubid', referencedColumn='', mappedBy=''}
2016-08-15 12:48:38.811 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(journals), mappingColumn=publisher, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.812 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property publisher
2016-08-15 12:48:38.812 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='journal'}
2016-08-15 12:48:38.812 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(journals), mappingColumn=subscriptions, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.812 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(journals), mappingColumn=null, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.812 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(journals), mappingColumn=element, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.812 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(journals), mappingColumn=subscriptions_KEY, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.812 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='subscriptions_KEY', referencedColumn='null', mappedBy='null'}
2016-08-15 12:48:38.812 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='journal'}
2016-08-15 12:48:38.812 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='journal'}
2016-08-15 12:48:38.812 DEBUG 18133 --- [           main] o.h.cfg.annotations.CollectionBinder     : Collection role: com.crossover.medijour.service.Journals.subscriptions
2016-08-15 12:48:38.812 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property subscriptions
2016-08-15 12:48:38.812 DEBUG 18133 --- [           main] org.hibernate.cfg.AnnotationBinder       : Binding entity from annotated class: com.crossover.medijour.service.Subscriber
2016-08-15 12:48:38.813 DEBUG 18133 --- [           main] o.hibernate.cfg.annotations.QueryBinder  : Binding named query: Subscriber.findAll => SELECT s FROM Subscriber s
2016-08-15 12:48:38.813 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
2016-08-15 12:48:38.813 DEBUG 18133 --- [           main] o.h.cfg.annotations.EntityBinder         : Import with entity name Subscriber
2016-08-15 12:48:38.813 DEBUG 18133 --- [           main] o.h.cfg.annotations.EntityBinder         : Bind entity com.crossover.medijour.service.Subscriber on table subscriber
2016-08-15 12:48:38.815 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subscriber), mappingColumn=id, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.815 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property id with lazy=false
2016-08-15 12:48:38.815 DEBUG 18133 --- [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.crossover.medijour.service.Subscriber:id]
2016-08-15 12:48:38.815 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for id
2016-08-15 12:48:38.816 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property id
2016-08-15 12:48:38.816 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subscriber), mappingColumn=name, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.816 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property name with lazy=false
2016-08-15 12:48:38.816 DEBUG 18133 --- [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.crossover.medijour.service.Subscriber:name]
2016-08-15 12:48:38.816 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for name
2016-08-15 12:48:38.816 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property name
2016-08-15 12:48:38.816 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subscriber), mappingColumn=provider_unique, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.816 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : MetadataSourceProcessor property providerUnique with lazy=false
2016-08-15 12:48:38.816 DEBUG 18133 --- [           main] o.hibernate.cfg.AbstractPropertyHolder   : Attempting to locate auto-apply AttributeConverter for property [com.crossover.medijour.service.Subscriber:providerUnique]
2016-08-15 12:48:38.816 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : building SimpleValue for providerUnique
2016-08-15 12:48:38.816 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property providerUnique
2016-08-15 12:48:38.816 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subscriber'}
2016-08-15 12:48:38.817 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subscriber), mappingColumn=subscriptions, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.817 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subscriber), mappingColumn=null, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.817 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subscriber), mappingColumn=element, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.817 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3Column{table=org.hibernate.mapping.Table(subscriber), mappingColumn=subscriptions_KEY, insertable=true, updatable=true, unique=false}
2016-08-15 12:48:38.817 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='subscriptions_KEY', referencedColumn='null', mappedBy='null'}
2016-08-15 12:48:38.817 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subscriber'}
2016-08-15 12:48:38.817 DEBUG 18133 --- [           main] org.hibernate.cfg.Ejb3Column             : Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='subscriber'}
2016-08-15 12:48:38.817 DEBUG 18133 --- [           main] o.h.cfg.annotations.CollectionBinder     : Collection role: com.crossover.medijour.service.Subscriber.subscriptions
2016-08-15 12:48:38.817 DEBUG 18133 --- [           main] o.h.cfg.annotations.PropertyBinder       : Building property subscriptions
2016-08-15 12:48:38.818 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for id
2016-08-15 12:48:38.818 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for id
2016-08-15 12:48:38.818 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for email
2016-08-15 12:48:38.818 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for name
2016-08-15 12:48:38.818 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for provunq
2016-08-15 12:48:38.818 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for id
2016-08-15 12:48:38.818 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for available
2016-08-15 12:48:38.818 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for header
2016-08-15 12:48:38.818 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for path
2016-08-15 12:48:38.818 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for id
2016-08-15 12:48:38.818 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for name
2016-08-15 12:48:38.818 DEBUG 18133 --- [           main] o.h.cfg.annotations.SimpleValueBinder    : Starting fillSimpleValue for providerUnique
2016-08-15 12:48:38.819 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Processing fk mappings (*ToOne and JoinedSubclass)
2016-08-15 12:48:38.825 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Processing extends queue
2016-08-15 12:48:38.825 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Processing extends queue
2016-08-15 12:48:38.825 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Processing collection mappings
2016-08-15 12:48:38.826 DEBUG 18133 --- [           main] org.hibernate.cfg.CollectionSecondPass   : Second pass for collection: com.crossover.medijour.service.Publisher.journals
2016-08-15 12:48:38.826 DEBUG 18133 --- [           main] o.h.cfg.annotations.CollectionBinder     : Binding a OneToMany: com.crossover.medijour.service.Publisher.journals through a foreign key
2016-08-15 12:48:38.827 DEBUG 18133 --- [           main] o.h.cfg.annotations.CollectionBinder     : Mapping collection: com.crossover.medijour.service.Publisher.journals -> journals
2016-08-15 12:48:38.828 DEBUG 18133 --- [           main] o.hibernate.cfg.annotations.TableBinder  : Retrieving property com.crossover.medijour.service.Journals.publisher
2016-08-15 12:48:38.828 DEBUG 18133 --- [           main] org.hibernate.cfg.CollectionSecondPass   : Mapped collection key: pubid, one-to-many: com.crossover.medijour.service.Journals
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] org.hibernate.cfg.CollectionSecondPass   : Second pass for collection: com.crossover.medijour.service.Journals.subscriptions
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] o.h.cfg.annotations.CollectionBinder     : Binding a OneToMany: com.crossover.medijour.service.Journals.subscriptions through a foreign key
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] o.h.cfg.annotations.CollectionBinder     : Mapping collection: com.crossover.medijour.service.Journals.subscriptions -> subscription
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] o.hibernate.cfg.annotations.TableBinder  : Retrieving property com.crossover.medijour.service.Subscription.journal
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] org.hibernate.cfg.CollectionSecondPass   : Mapped collection key: jrnid, one-to-many: com.crossover.medijour.service.Subscription
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] org.hibernate.cfg.CollectionSecondPass   : Second pass for collection: com.crossover.medijour.service.Subscriber.subscriptions
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] o.h.cfg.annotations.CollectionBinder     : Binding a OneToMany: com.crossover.medijour.service.Subscriber.subscriptions through a foreign key
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] o.h.cfg.annotations.CollectionBinder     : Mapping collection: com.crossover.medijour.service.Subscriber.subscriptions -> subscription
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] o.hibernate.cfg.annotations.TableBinder  : Retrieving property com.crossover.medijour.service.Subscription.subscriber
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] org.hibernate.cfg.CollectionSecondPass   : Mapped collection key: subid, one-to-many: com.crossover.medijour.service.Subscription
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Processing native query and ResultSetMapping mappings
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Processing association property references
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Creating tables' unique integer identifiers
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Processing foreign key constraints
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Resolving reference to class: com.crossover.medijour.service.Publisher
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Resolving reference to class: com.crossover.medijour.service.Journals
2016-08-15 12:48:38.829 DEBUG 18133 --- [           main] org.hibernate.cfg.Configuration          : Resolving reference to class: com.crossover.medijour.service.Subscriber
2016-08-15 12:48:38.834 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Automatic flush during beforeCompletion(): disabled
2016-08-15 12:48:38.834 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Automatic session close at end of transaction: disabled
2016-08-15 12:48:38.834 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : JDBC batch size: 15
2016-08-15 12:48:38.834 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : JDBC batch updates for versioned data: disabled
2016-08-15 12:48:38.834 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Scrollable result sets: enabled
2016-08-15 12:48:38.834 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Wrap result sets: disabled
2016-08-15 12:48:38.835 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : JDBC3 getGeneratedKeys(): enabled
2016-08-15 12:48:38.835 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : multi-tenancy strategy : NONE
2016-08-15 12:48:38.835 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Connection release mode: auto
2016-08-15 12:48:38.837 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Using BatchFetchStyle : LEGACY
2016-08-15 12:48:38.838 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Maximum outer join fetch depth: 2
2016-08-15 12:48:38.838 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Default batch fetch size: 1
2016-08-15 12:48:38.838 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Generate SQL with comments: disabled
2016-08-15 12:48:38.838 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Order SQL updates by primary key: disabled
2016-08-15 12:48:38.838 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Order SQL inserts for batching: disabled
2016-08-15 12:48:38.838 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Default null ordering: none
2016-08-15 12:48:38.838 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
2016-08-15 12:48:38.840  INFO 18133 --- [           main] o.h.h.i.ast.ASTQueryTranslatorFactory    : HHH000397: Using ASTQueryTranslatorFactory
2016-08-15 12:48:38.840 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Query language substitutions: {}
2016-08-15 12:48:38.840 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : JPA-QL strict compliance: disabled
2016-08-15 12:48:38.840 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Second-level cache: enabled
2016-08-15 12:48:38.840 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Query cache: disabled
2016-08-15 12:48:38.841 DEBUG 18133 --- [           main] o.h.c.internal.RegionFactoryInitiator    : Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
2016-08-15 12:48:38.844 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Optimize cache for minimal puts: disabled
2016-08-15 12:48:38.844 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Structured second-level cache entries: disabled
2016-08-15 12:48:38.844 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Second-level cache direct-reference entries: disabled
2016-08-15 12:48:38.844 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Automatic eviction of collection cache: disabled
2016-08-15 12:48:38.844 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Statistics: disabled
2016-08-15 12:48:38.844 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Deleted entity synthetic identifier rollback: disabled
2016-08-15 12:48:38.844 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Default entity-mode: pojo
2016-08-15 12:48:38.844 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Named query checking : enabled
2016-08-15 12:48:38.844 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Check Nullability in Core (should be disabled when Bean Validation is on): enabled
2016-08-15 12:48:38.844 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : Allow initialization of lazy state outside session : : disabled
2016-08-15 12:48:38.844 DEBUG 18133 --- [           main] org.hibernate.cfg.SettingsFactory        : JTA Track by Thread: enabled
2016-08-15 12:48:38.853 DEBUG 18133 --- [           main] o.hibernate.internal.SessionFactoryImpl  : Building session factory
2016-08-15 12:48:38.864 DEBUG 18133 --- [           main] o.hibernate.internal.SessionFactoryImpl  : Session factory constructed with filter configurations : {}
2016-08-15 12:48:38.865 DEBUG 18133 --- [           main] o.hibernate.internal.SessionFactoryImpl  : Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/usr/lib/jvm/java-8-oracle/jre/lib/amd64, java.vm.version=25.91-b14, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=:, guice.disable.misplaced.annotation.check=true, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, hibernate.ejb.naming_strategy=org.hibernate.cfg.EJB3NamingStrategy, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/home/mvera/oficina/medijour/dev/server/catalogue, PID=18133, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.8.0_91-b14, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/endorsed, os.arch=amd64, org.jboss.logging.provider=slf4j, java.io.tmpdir=/tmp, line.separator=
, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, classworlds.conf=/usr/share/maven/bin/m2.conf, sun.jnu.encoding=UTF-8, java.library.path=/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, spring.beaninfo.ignore=true, hibernate.ejb.persistenceUnitName=default, java.specification.name=Java Platform API Specification, java.class.version=52.0, hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@49fdbfbe, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=3.13.0-48-generic, user.home=/home/mvera, catalina.useNaming=false, user.timezone=America/Sao_Paulo, java.awt.printerjob=sun.print.PSPrinterJob, java.specification.version=1.8, file.encoding=UTF-8, javax.persistence.nonJtaDataSource=org.apache.tomcat.jdbc.pool.DataSource@26ece61a{ConnectionPool[defaultAutoCommit=null; defaultReadOnly=null; defaultTransactionIsolation=-1; defaultCatalog=null; driverClassName=com.mysql.jdbc.Driver; maxActive=1; maxIdle=1; minIdle=1; initialSize=1; maxWait=30000; testOnBorrow=true; testOnReturn=false; timeBetweenEvictionRunsMillis=5000; numTestsPerEvictionRun=0; minEvictableIdleTimeMillis=5000; testWhileIdle=false; testOnConnect=false; password=********; url=jdbc:mysql://localhost:3306/medijourdb; username=medijour; validationQuery=SELECT 1; validationQueryTimeout=-1; validatorClassName=null; validationInterval=30000; accessToUnderlyingConnectionAllowed=true; removeAbandoned=false; removeAbandonedTimeout=60; logAbandoned=false; connectionProperties=null; initSQL=null; jdbcInterceptors=null; jmxEnabled=true; fairQueue=true; useEquals=true; abandonWhenPercentageFull=0; maxAge=0; useLock=false; dataSource=null; dataSourceJNDI=null; suspectTimeout=0; alternateUsernameAllowed=false; commitOnReturn=false; rollbackOnReturn=false; useDisposableConnectionFacade=true; logValidationErrors=false; propagateInterruptState=false; ignoreExceptionOnPreLoad=false; }, catalina.home=/tmp/tomcat.8688180144102048377.8082, user.name=mvera, java.class.path=/usr/share/maven/boot/plexus-classworlds-2.x.jar, hibernate.bytecode.use_reflection_optimizer=false, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.8, sun.arch.data.model=64, java.home=/usr/lib/jvm/java-8-oracle/jre, sun.java.command=org.codehaus.plexus.classworlds.launcher.Launcher clean install spring-boot:run, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_91, java.ext.dirs=/usr/lib/jvm/java-8-oracle/jre/lib/ext:/usr/java/packages/lib/ext, securerandom.source=file:/dev/./urandom, sun.boot.class.path=/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar:/usr/lib/jvm/java-8-oracle/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar:/usr/lib/jvm/java-8-oracle/jre/classes, java.vendor=Oracle Corporation, java.awt.headless=true, maven.home=/usr/share/maven, catalina.base=/tmp/tomcat.8688180144102048377.8082, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=gnome, sun.cpu.isalist=}
2016-08-15 12:48:39.257 DEBUG 18133 --- [           main] o.h.v.i.e.r.DefaultTraversableResolver   : Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2016-08-15 12:48:39.257 DEBUG 18133 --- [           main] o.h.v.i.e.r.DefaultTraversableResolver   : Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2016-08-15 12:48:39.258 DEBUG 18133 --- [           main] o.h.v.internal.xml.ValidationXmlParser   : Trying to load META-INF/validation.xml for XML based Validator configuration.
2016-08-15 12:48:39.258 DEBUG 18133 --- [           main] o.h.v.internal.xml.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via TCCL
2016-08-15 12:48:39.258 DEBUG 18133 --- [           main] o.h.v.internal.xml.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2016-08-15 12:48:39.258 DEBUG 18133 --- [           main] o.h.v.internal.xml.ValidationXmlParser   : No META-INF/validation.xml found. Using annotation based configuration only.
2016-08-15 12:48:39.336 DEBUG 18133 --- [           main] org.hibernate.secure.spi.JaccIntegrator  : Skipping JACC integration as it was not enabled
2016-08-15 12:48:39.340 DEBUG 18133 --- [           main] org.hibernate.engine.spi.CascadeStyles   : External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
2016-08-15 12:48:39.356 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Setting dialect [org.hibernate.dialect.MySQL5Dialect]
2016-08-15 12:48:39.356 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Setting dialect [org.hibernate.dialect.MySQL5Dialect]
2016-08-15 12:48:39.356 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Setting dialect [org.hibernate.dialect.MySQL5Dialect]
2016-08-15 12:48:39.356 DEBUG 18133 --- [           main] .i.f.i.DefaultIdentifierGeneratorFactory : Setting dialect [org.hibernate.dialect.MySQL5Dialect]
2016-08-15 12:48:39.458 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      : Static SQL for collection: com.crossover.medijour.service.Publisher.journals
2016-08-15 12:48:39.458 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      :  Row insert: update journals set pubid=? where id=?
2016-08-15 12:48:39.458 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      :  Row update: update journals set  where id=?
2016-08-15 12:48:39.458 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      :  Row delete: update journals set pubid=null where pubid=? and id=?
2016-08-15 12:48:39.458 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      :  One-shot delete: update journals set pubid=null where pubid=?
2016-08-15 12:48:39.458 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      : Static SQL for collection: com.crossover.medijour.service.Subscriber.subscriptions
2016-08-15 12:48:39.458 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      :  Row insert: update subscription set subid=? where id=?
2016-08-15 12:48:39.458 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      :  Row update: update subscription set  where id=?
2016-08-15 12:48:39.458 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      :  Row delete: update subscription set subid=null where subid=? and id=?
2016-08-15 12:48:39.458 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      :  One-shot delete: update subscription set subid=null where subid=?
2016-08-15 12:48:39.458 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      : Static SQL for collection: com.crossover.medijour.service.Journals.subscriptions
2016-08-15 12:48:39.458 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      :  Row insert: update subscription set jrnid=? where id=?
2016-08-15 12:48:39.459 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      :  Row update: update subscription set  where id=?
2016-08-15 12:48:39.459 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      :  Row delete: update subscription set jrnid=null where jrnid=? and id=?
2016-08-15 12:48:39.459 DEBUG 18133 --- [           main] o.h.p.c.AbstractCollectionPersister      :  One-shot delete: update subscription set jrnid=null where jrnid=?
2016-08-15 12:48:39.462 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     : Static SQL for entity: com.crossover.medijour.service.Subscription
2016-08-15 12:48:39.463 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Version select: select id from subscription where id =?
2016-08-15 12:48:39.463 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Snapshot select: select subscripti_.id, subscripti_.jrnid as jrnid2_3_, subscripti_.subid as subid3_3_ from subscription subscripti_ where subscripti_.id=?
2016-08-15 12:48:39.463 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Insert 0: insert into subscription (jrnid, subid, id) values (?, ?, ?)
2016-08-15 12:48:39.463 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Update 0: update subscription set jrnid=?, subid=? where id=?
2016-08-15 12:48:39.463 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Delete 0: delete from subscription where id=?
2016-08-15 12:48:39.485 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6edd553c]
2016-08-15 12:48:39.486 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.490 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@eb20477]
2016-08-15 12:48:39.491 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.available
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.header
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.path
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b74319a]
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher.email
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher.journals
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : journal.publisher.journals
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher.name
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher.provunq
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.subscriptions
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : journal.subscriptions
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ab4cc5b]
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber.name
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber.providerUnique
2016-08-15 12:48:39.492 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber.subscriptions
2016-08-15 12:48:39.493 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : subscriber.subscriptions
2016-08-15 12:48:39.493 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.507 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.512 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscription)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscription)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Subscription.journal)
             - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:2>, path=com.crossover.medijour.service.Subscription.journal.publisher)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:3>, path=com.crossover.medijour.service.Subscription.subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscription)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(journal)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.crossover.medijour.service.Journals)
                - SQL table alias mapping - journals1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(publisher)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.crossover.medijour.service.Publisher)
                      - SQL table alias mapping - publisher2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(subscriber)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.crossover.medijour.service.Subscriber)
                - SQL table alias mapping - subscriber3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

2016-08-15 12:48:39.514 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscription [NONE]: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_, journals1_.id as id1_0_1_, journals1_.available as availabl2_0_1_, journals1_.header as header3_0_1_, journals1_.path as path4_0_1_, journals1_.pubid as pubid5_0_1_, publisher2_.id as id1_1_2_, publisher2_.email as email2_1_2_, publisher2_.name as name3_1_2_, publisher2_.provunq as provunq4_1_2_, subscriber3_.id as id1_2_3_, subscriber3_.name as name2_2_3_, subscriber3_.provider_unique as provider3_2_3_ from subscription subscripti0_ left outer join journals journals1_ on subscripti0_.jrnid=journals1_.id left outer join publisher publisher2_ on journals1_.pubid=publisher2_.id left outer join subscriber subscriber3_ on subscripti0_.subid=subscriber3_.id where subscripti0_.id=?
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48530439]
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d8d4c7b]
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.available
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.header
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.path
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b581dad]
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher.email
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher.journals
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : journal.publisher.journals
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher.name
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher.provunq
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.subscriptions
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : journal.subscriptions
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.515 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68abde9a]
2016-08-15 12:48:39.516 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber.name
2016-08-15 12:48:39.516 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber.providerUnique
2016-08-15 12:48:39.516 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber.subscriptions
2016-08-15 12:48:39.516 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : subscriber.subscriptions
2016-08-15 12:48:39.516 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.516 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.517 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscription)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscription)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Subscription.journal)
             - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:2>, path=com.crossover.medijour.service.Subscription.journal.publisher)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:3>, path=com.crossover.medijour.service.Subscription.subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscription)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}
          - JOIN (JoinDefinedByMetadata(journal)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.crossover.medijour.service.Journals)
                - SQL table alias mapping - journals1_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}
                - JOIN (JoinDefinedByMetadata(publisher)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.crossover.medijour.service.Publisher)
                      - SQL table alias mapping - publisher2_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_1_2_}
          - JOIN (JoinDefinedByMetadata(subscriber)) : <gen:0> -> <gen:3>
             - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.crossover.medijour.service.Subscriber)
                - SQL table alias mapping - subscriber3_
                - alias suffix - 3_
                - suffixed key columns - {id1_2_3_}

2016-08-15 12:48:39.517 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscription [READ]: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_, journals1_.id as id1_0_1_, journals1_.available as availabl2_0_1_, journals1_.header as header3_0_1_, journals1_.path as path4_0_1_, journals1_.pubid as pubid5_0_1_, publisher2_.id as id1_1_2_, publisher2_.email as email2_1_2_, publisher2_.name as name3_1_2_, publisher2_.provunq as provunq4_1_2_, subscriber3_.id as id1_2_3_, subscriber3_.name as name2_2_3_, subscriber3_.provider_unique as provider3_2_3_ from subscription subscripti0_ left outer join journals journals1_ on subscripti0_.jrnid=journals1_.id left outer join publisher publisher2_ on journals1_.pubid=publisher2_.id left outer join subscriber subscriber3_ on subscripti0_.subid=subscriber3_.id where subscripti0_.id=?
2016-08-15 12:48:39.517 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2d0044bf]
2016-08-15 12:48:39.517 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.517 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51ad751f]
2016-08-15 12:48:39.517 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.517 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2364f02a]
2016-08-15 12:48:39.517 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.517 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.517 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscription)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscription)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Subscription.journal)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:2>, path=com.crossover.medijour.service.Subscription.subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscription)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2016-08-15 12:48:39.518 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscription [UPGRADE]: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_ from subscription subscripti0_ where subscripti0_.id=? for update
2016-08-15 12:48:39.518 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cee6d45]
2016-08-15 12:48:39.518 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.518 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7010da4c]
2016-08-15 12:48:39.518 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.518 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74f191c4]
2016-08-15 12:48:39.518 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.518 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.518 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscription)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscription)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Subscription.journal)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:2>, path=com.crossover.medijour.service.Subscription.subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscription)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2016-08-15 12:48:39.518 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscription [UPGRADE_NOWAIT]: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_ from subscription subscripti0_ where subscripti0_.id=? for update
2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b8a5e5a]
2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dfdd03c]
2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@357a07f6]
2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscription)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscription)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Subscription.journal)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:2>, path=com.crossover.medijour.service.Subscription.subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscription)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscription [UPGRADE_SKIPLOCKED]: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_ from subscription subscripti0_ where subscripti0_.id=? for update
2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6cdbf78d]
2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@394636dd]
2016-08-15 12:48:39.519 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.520 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ce6d3b4]
2016-08-15 12:48:39.520 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.520 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.520 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscription)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscription)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Subscription.journal)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:2>, path=com.crossover.medijour.service.Subscription.subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscription)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2016-08-15 12:48:39.520 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscription [FORCE]: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_ from subscription subscripti0_ where subscripti0_.id=? for update
2016-08-15 12:48:39.520 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fb2203a]
2016-08-15 12:48:39.520 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.520 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36cea872]
2016-08-15 12:48:39.520 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.520 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cdfb66c]
2016-08-15 12:48:39.520 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.520 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.521 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscription)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscription)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Subscription.journal)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:2>, path=com.crossover.medijour.service.Subscription.subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscription)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2016-08-15 12:48:39.521 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscription [PESSIMISTIC_READ]: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_ from subscription subscripti0_ where subscripti0_.id=? lock in share mode
2016-08-15 12:48:39.521 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2292ee3d]
2016-08-15 12:48:39.521 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.521 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bed482f]
2016-08-15 12:48:39.521 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.521 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aa0ffe8]
2016-08-15 12:48:39.521 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.521 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.522 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscription)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscription)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Subscription.journal)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:2>, path=com.crossover.medijour.service.Subscription.subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscription)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2016-08-15 12:48:39.522 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscription [PESSIMISTIC_WRITE]: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_ from subscription subscripti0_ where subscripti0_.id=? for update
2016-08-15 12:48:39.522 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ff61387]
2016-08-15 12:48:39.522 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.522 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@490c1963]
2016-08-15 12:48:39.522 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.522 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41ef015]
2016-08-15 12:48:39.522 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.522 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.522 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscription)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscription)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Subscription.journal)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:2>, path=com.crossover.medijour.service.Subscription.subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscription)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2016-08-15 12:48:39.522 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscription [PESSIMISTIC_FORCE_INCREMENT]: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_ from subscription subscripti0_ where subscripti0_.id=? for update
2016-08-15 12:48:39.522 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b3bb13a]
2016-08-15 12:48:39.523 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.523 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2653716c]
2016-08-15 12:48:39.523 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.523 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@553eb3eb]
2016-08-15 12:48:39.523 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.523 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.523 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscription)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscription)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Subscription.journal)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:2>, path=com.crossover.medijour.service.Subscription.subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscription)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2016-08-15 12:48:39.523 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscription [OPTIMISTIC]: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_ from subscription subscripti0_ where subscripti0_.id=?
2016-08-15 12:48:39.523 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@431a7a17]
2016-08-15 12:48:39.523 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.523 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c97dbb0]
2016-08-15 12:48:39.523 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.524 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c169222]
2016-08-15 12:48:39.524 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.524 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.524 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscription)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscription)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Subscription.journal)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:2>, path=com.crossover.medijour.service.Subscription.subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscription)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {id1_3_0_}

2016-08-15 12:48:39.524 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscription [OPTIMISTIC_FORCE_INCREMENT]: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_ from subscription subscripti0_ where subscripti0_.id=?
2016-08-15 12:48:39.542 DEBUG 18133 --- [           main] org.hibernate.loader.Loader              : Static select for action ACTION_MERGE on entity com.crossover.medijour.service.Subscription: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_ from subscription subscripti0_ where subscripti0_.id=?
2016-08-15 12:48:39.542 DEBUG 18133 --- [           main] org.hibernate.loader.Loader              : Static select for action ACTION_REFRESH on entity com.crossover.medijour.service.Subscription: select subscripti0_.id as id1_3_0_, subscripti0_.jrnid as jrnid2_3_0_, subscripti0_.subid as subid3_3_0_ from subscription subscripti0_ where subscripti0_.id=?
2016-08-15 12:48:39.542 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     : Static SQL for entity: com.crossover.medijour.service.Publisher
2016-08-15 12:48:39.542 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Version select: select id from publisher where id =?
2016-08-15 12:48:39.542 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Snapshot select: select publisher_.id, publisher_.email as email2_1_, publisher_.name as name3_1_, publisher_.provunq as provunq4_1_ from publisher publisher_ where publisher_.id=?
2016-08-15 12:48:39.542 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Insert 0: insert into publisher (email, name, provunq, id) values (?, ?, ?, ?)
2016-08-15 12:48:39.542 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Update 0: update publisher set email=?, name=?, provunq=? where id=?
2016-08-15 12:48:39.542 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Delete 0: delete from publisher where id=?
2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5548aa8]
2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : email
2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journals
2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : provunq
2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Publisher)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Publisher)
          - SQL table alias mapping - publisher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Publisher [NONE]: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=?
2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63a7d966]
2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : email
2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journals
2016-08-15 12:48:39.543 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.544 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : provunq
2016-08-15 12:48:39.544 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.544 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.544 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Publisher)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Publisher)
          - SQL table alias mapping - publisher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2016-08-15 12:48:39.544 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Publisher [READ]: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=?
2016-08-15 12:48:39.544 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3762c6a1]
2016-08-15 12:48:39.544 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : email
2016-08-15 12:48:39.544 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journals
2016-08-15 12:48:39.544 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.544 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : provunq
2016-08-15 12:48:39.544 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.544 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Publisher)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Publisher)
          - SQL table alias mapping - publisher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Publisher [UPGRADE]: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=? for update
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3926e9]
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : email
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journals
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : provunq
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Publisher)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Publisher)
          - SQL table alias mapping - publisher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Publisher [UPGRADE_NOWAIT]: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=? for update
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2773d21d]
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : email
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journals
2016-08-15 12:48:39.545 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.546 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : provunq
2016-08-15 12:48:39.546 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.546 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.546 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Publisher)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Publisher)
          - SQL table alias mapping - publisher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2016-08-15 12:48:39.546 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Publisher [UPGRADE_SKIPLOCKED]: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=? for update
2016-08-15 12:48:39.546 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7662ef57]
2016-08-15 12:48:39.546 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : email
2016-08-15 12:48:39.546 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journals
2016-08-15 12:48:39.546 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.546 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : provunq
2016-08-15 12:48:39.546 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.546 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Publisher)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Publisher)
          - SQL table alias mapping - publisher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Publisher [FORCE]: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=? for update
2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@634cb097]
2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : email
2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journals
2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : provunq
2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Publisher)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Publisher)
          - SQL table alias mapping - publisher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Publisher [PESSIMISTIC_READ]: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=? lock in share mode
2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11c23175]
2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : email
2016-08-15 12:48:39.547 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journals
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : provunq
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Publisher)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Publisher)
          - SQL table alias mapping - publisher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Publisher [PESSIMISTIC_WRITE]: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=? for update
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e641fd7]
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : email
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journals
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : provunq
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.548 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Publisher)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Publisher)
          - SQL table alias mapping - publisher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Publisher [PESSIMISTIC_FORCE_INCREMENT]: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=? for update
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55be824b]
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : email
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journals
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : provunq
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Publisher)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Publisher)
          - SQL table alias mapping - publisher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Publisher [OPTIMISTIC]: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=?
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25fc2a0e]
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : email
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journals
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : provunq
2016-08-15 12:48:39.549 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.550 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.550 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Publisher)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Publisher)
          - SQL table alias mapping - publisher0_
          - alias suffix - 0_
          - suffixed key columns - {id1_1_0_}

2016-08-15 12:48:39.550 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Publisher [OPTIMISTIC_FORCE_INCREMENT]: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=?
2016-08-15 12:48:39.553 DEBUG 18133 --- [           main] org.hibernate.loader.Loader              : Static select for action ACTION_MERGE on entity com.crossover.medijour.service.Publisher: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=?
2016-08-15 12:48:39.553 DEBUG 18133 --- [           main] org.hibernate.loader.Loader              : Static select for action ACTION_REFRESH on entity com.crossover.medijour.service.Publisher: select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=?
2016-08-15 12:48:39.553 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     : Static SQL for entity: com.crossover.medijour.service.Journals
2016-08-15 12:48:39.553 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Version select: select id from journals where id =?
2016-08-15 12:48:39.553 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Snapshot select: select journals_.id, journals_.available as availabl2_0_, journals_.header as header3_0_, journals_.path as path4_0_, journals_.pubid as pubid5_0_ from journals journals_ where journals_.id=?
2016-08-15 12:48:39.553 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Insert 0: insert into journals (available, header, path, pubid, id) values (?, ?, ?, ?, ?)
2016-08-15 12:48:39.553 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Update 0: update journals set available=?, header=?, path=?, pubid=? where id=?
2016-08-15 12:48:39.553 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Delete 0: delete from journals where id=?
2016-08-15 12:48:39.553 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ba966fd]
2016-08-15 12:48:39.553 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : available
2016-08-15 12:48:39.554 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : header
2016-08-15 12:48:39.554 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : path
2016-08-15 12:48:39.554 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher
2016-08-15 12:48:39.554 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1482af08]
2016-08-15 12:48:39.554 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher.email
2016-08-15 12:48:39.554 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher.journals
2016-08-15 12:48:39.554 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : publisher.journals
2016-08-15 12:48:39.554 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher.name
2016-08-15 12:48:39.554 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher.provunq
2016-08-15 12:48:39.554 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.554 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.554 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Journals)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Journals)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Journals.publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Journals)
          - SQL table alias mapping - journals0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(publisher)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.crossover.medijour.service.Publisher)
                - SQL table alias mapping - publisher1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Journals [NONE]: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_, publisher1_.id as id1_1_1_, publisher1_.email as email2_1_1_, publisher1_.name as name3_1_1_, publisher1_.provunq as provunq4_1_1_ from journals journals0_ left outer join publisher publisher1_ on journals0_.pubid=publisher1_.id where journals0_.id=?
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ebb065a]
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : available
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : header
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : path
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d32b8f9]
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher.email
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher.journals
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : publisher.journals
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher.name
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher.provunq
2016-08-15 12:48:39.555 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.556 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.556 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.556 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Journals)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Journals)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Journals.publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Journals)
          - SQL table alias mapping - journals0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}
          - JOIN (JoinDefinedByMetadata(publisher)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.crossover.medijour.service.Publisher)
                - SQL table alias mapping - publisher1_
                - alias suffix - 1_
                - suffixed key columns - {id1_1_1_}

2016-08-15 12:48:39.557 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Journals [READ]: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_, publisher1_.id as id1_1_1_, publisher1_.email as email2_1_1_, publisher1_.name as name3_1_1_, publisher1_.provunq as provunq4_1_1_ from journals journals0_ left outer join publisher publisher1_ on journals0_.pubid=publisher1_.id where journals0_.id=?
2016-08-15 12:48:39.557 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@da1761e]
2016-08-15 12:48:39.557 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : available
2016-08-15 12:48:39.558 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : header
2016-08-15 12:48:39.558 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : path
2016-08-15 12:48:39.558 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher
2016-08-15 12:48:39.558 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54f012a3]
2016-08-15 12:48:39.558 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.558 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.558 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.558 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Journals)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Journals)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Journals.publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Journals)
          - SQL table alias mapping - journals0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2016-08-15 12:48:39.558 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Journals [UPGRADE]: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_ from journals journals0_ where journals0_.id=? for update
2016-08-15 12:48:39.558 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e6361da]
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : available
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : header
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : path
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58ec02bf]
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Journals)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Journals)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Journals.publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Journals)
          - SQL table alias mapping - journals0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Journals [UPGRADE_NOWAIT]: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_ from journals journals0_ where journals0_.id=? for update
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@cdd760b]
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : available
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : header
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : path
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36e2c7c6]
2016-08-15 12:48:39.559 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Journals)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Journals)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Journals.publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Journals)
          - SQL table alias mapping - journals0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Journals [UPGRADE_SKIPLOCKED]: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_ from journals journals0_ where journals0_.id=? for update
2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ea3c25f]
2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : available
2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : header
2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : path
2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher
2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7d67b403]
2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.560 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Journals)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Journals)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Journals.publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Journals)
          - SQL table alias mapping - journals0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Journals [FORCE]: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_ from journals journals0_ where journals0_.id=? for update
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d9b909e]
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : available
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : header
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : path
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6833c5b1]
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Journals)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Journals)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Journals.publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Journals)
          - SQL table alias mapping - journals0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Journals [PESSIMISTIC_READ]: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_ from journals journals0_ where journals0_.id=? lock in share mode
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28b4a318]
2016-08-15 12:48:39.561 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : available
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : header
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : path
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@340fa4cd]
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Journals)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Journals)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Journals.publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Journals)
          - SQL table alias mapping - journals0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Journals [PESSIMISTIC_WRITE]: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_ from journals journals0_ where journals0_.id=? for update
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42e7e1b0]
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : available
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : header
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : path
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30dc83c6]
2016-08-15 12:48:39.562 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Journals)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Journals)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Journals.publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Journals)
          - SQL table alias mapping - journals0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Journals [PESSIMISTIC_FORCE_INCREMENT]: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_ from journals journals0_ where journals0_.id=? for update
2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@793c60dc]
2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : available
2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : header
2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : path
2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher
2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7aa788b6]
2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.563 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Journals)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Journals)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Journals.publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Journals)
          - SQL table alias mapping - journals0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Journals [OPTIMISTIC]: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_ from journals journals0_ where journals0_.id=?
2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2eb1f697]
2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : available
2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : header
2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : path
2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher
2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f40e101]
2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Journals)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Journals)
          - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:1>, path=com.crossover.medijour.service.Journals.publisher)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Journals)
          - SQL table alias mapping - journals0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

2016-08-15 12:48:39.564 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Journals [OPTIMISTIC_FORCE_INCREMENT]: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_ from journals journals0_ where journals0_.id=?
2016-08-15 12:48:39.565 DEBUG 18133 --- [           main] org.hibernate.loader.Loader              : Static select for action ACTION_MERGE on entity com.crossover.medijour.service.Journals: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_ from journals journals0_ where journals0_.id=?
2016-08-15 12:48:39.565 DEBUG 18133 --- [           main] org.hibernate.loader.Loader              : Static select for action ACTION_REFRESH on entity com.crossover.medijour.service.Journals: select journals0_.id as id1_0_0_, journals0_.available as availabl2_0_0_, journals0_.header as header3_0_0_, journals0_.path as path4_0_0_, journals0_.pubid as pubid5_0_0_ from journals journals0_ where journals0_.id=?
2016-08-15 12:48:39.565 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     : Static SQL for entity: com.crossover.medijour.service.Subscriber
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Version select: select id from subscriber where id =?
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Snapshot select: select subscriber_.id, subscriber_.name as name2_2_, subscriber_.provider_unique as provider3_2_ from subscriber subscriber_ where subscriber_.id=?
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Insert 0: insert into subscriber (name, provider_unique, id) values (?, ?, ?)
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Update 0: update subscriber set name=?, provider_unique=? where id=?
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.p.entity.AbstractEntityPersister     :  Delete 0: delete from subscriber where id=?
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29e43667]
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : providerUnique
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscriber)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscriber)
          - SQL table alias mapping - subscriber0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscriber [NONE]: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=?
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36a79136]
2016-08-15 12:48:39.566 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : providerUnique
2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscriber)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscriber)
          - SQL table alias mapping - subscriber0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscriber [READ]: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=?
2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56d864b3]
2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : providerUnique
2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscriber)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscriber)
          - SQL table alias mapping - subscriber0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2016-08-15 12:48:39.567 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscriber [UPGRADE]: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=? for update
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57f3062f]
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : providerUnique
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscriber)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscriber)
          - SQL table alias mapping - subscriber0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscriber [UPGRADE_NOWAIT]: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=? for update
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25cb5ae6]
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : providerUnique
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.568 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscriber)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscriber)
          - SQL table alias mapping - subscriber0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscriber [UPGRADE_SKIPLOCKED]: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=? for update
2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fe02b83]
2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : providerUnique
2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscriber)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscriber)
          - SQL table alias mapping - subscriber0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscriber [FORCE]: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=? for update
2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a67a34b]
2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : providerUnique
2016-08-15 12:48:39.569 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscriber)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscriber)
          - SQL table alias mapping - subscriber0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscriber [PESSIMISTIC_READ]: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=? lock in share mode
2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@786add54]
2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : providerUnique
2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscriber)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscriber)
          - SQL table alias mapping - subscriber0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscriber [PESSIMISTIC_WRITE]: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=? for update
2016-08-15 12:48:39.570 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c7cbd8b]
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : providerUnique
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscriber)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscriber)
          - SQL table alias mapping - subscriber0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscriber [PESSIMISTIC_FORCE_INCREMENT]: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=? for update
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65fcb28]
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : providerUnique
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.571 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscriber)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscriber)
          - SQL table alias mapping - subscriber0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2016-08-15 12:48:39.572 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscriber [OPTIMISTIC]: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=?
2016-08-15 12:48:39.572 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35b8ffcc]
2016-08-15 12:48:39.572 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : name
2016-08-15 12:48:39.572 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : providerUnique
2016-08-15 12:48:39.572 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.572 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.572 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.572 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(entity=com.crossover.medijour.service.Subscriber)
    - Returns
       - EntityReturnImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:0>, path=com.crossover.medijour.service.Subscriber)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.crossover.medijour.service.Subscriber)
          - SQL table alias mapping - subscriber0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

2016-08-15 12:48:39.572 DEBUG 18133 --- [           main] o.h.loader.entity.plan.EntityLoader      : Static select for entity com.crossover.medijour.service.Subscriber [OPTIMISTIC_FORCE_INCREMENT]: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=?
2016-08-15 12:48:39.572 DEBUG 18133 --- [           main] org.hibernate.loader.Loader              : Static select for action ACTION_MERGE on entity com.crossover.medijour.service.Subscriber: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=?
2016-08-15 12:48:39.572 DEBUG 18133 --- [           main] org.hibernate.loader.Loader              : Static select for action ACTION_REFRESH on entity com.crossover.medijour.service.Subscriber: select subscriber0_.id as id1_2_0_, subscriber0_.name as name2_2_0_, subscriber0_.provider_unique as provider3_2_0_ from subscriber subscriber0_ where subscriber0_.id=?
2016-08-15 12:48:39.580 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3a01bd4b]
2016-08-15 12:48:39.580 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7061ea0e]
2016-08-15 12:48:39.581 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : available
2016-08-15 12:48:39.582 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : header
2016-08-15 12:48:39.582 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : path
2016-08-15 12:48:39.582 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : publisher
2016-08-15 12:48:39.582 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : publisher
2016-08-15 12:48:39.582 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriptions
2016-08-15 12:48:39.582 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.585 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.586 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(collection=com.crossover.medijour.service.Publisher.journals)
    - Returns
       - CollectionReturnImpl(collection=com.crossover.medijour.service.Publisher.journals, querySpaceUid=<gen:0>, path=[com.crossover.medijour.service.Publisher.journals])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:1>, path=[com.crossover.medijour.service.Publisher.journals].<elements>)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.crossover.medijour.service.Publisher.journals)
          - SQL table alias mapping - journals0_
          - alias suffix - 0_
          - suffixed key columns - {pubid5_1_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_0_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.crossover.medijour.service.Journals)
                - SQL table alias mapping - journals0_
                - alias suffix - 1_
                - suffixed key columns - {id1_0_1_}

2016-08-15 12:48:39.586 DEBUG 18133 --- [           main] o.h.l.collection.plan.CollectionLoader   : Static select for collection com.crossover.medijour.service.Publisher.journals: select journals0_.pubid as pubid5_1_0_, journals0_.id as id1_0_0_, journals0_.id as id1_0_1_, journals0_.available as availabl2_0_1_, journals0_.header as header3_0_1_, journals0_.path as path4_0_1_, journals0_.pubid as pubid5_0_1_ from journals journals0_ where journals0_.pubid=?
2016-08-15 12:48:39.586 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b9af14b]
2016-08-15 12:48:39.586 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bc4d86e]
2016-08-15 12:48:39.586 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.586 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38ccd45d]
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.available
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.header
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.path
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7544cfd6]
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher.email
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher.journals
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : journal.publisher.journals
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher.name
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.publisher.provunq
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal.subscriptions
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : journal.subscriptions
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : subscriber
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.587 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.588 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(collection=com.crossover.medijour.service.Subscriber.subscriptions)
    - Returns
       - CollectionReturnImpl(collection=com.crossover.medijour.service.Subscriber.subscriptions, querySpaceUid=<gen:0>, path=[com.crossover.medijour.service.Subscriber.subscriptions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:1>, path=[com.crossover.medijour.service.Subscriber.subscriptions].<elements>)
             - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Journals, querySpaceUid=<gen:2>, path=[com.crossover.medijour.service.Subscriber.subscriptions].<elements>.journal)
                - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Publisher, querySpaceUid=<gen:3>, path=[com.crossover.medijour.service.Subscriber.subscriptions].<elements>.journal.publisher)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.crossover.medijour.service.Subscriber.subscriptions)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {subid3_2_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.crossover.medijour.service.Subscription)
                - SQL table alias mapping - subscripti0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(journal)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.crossover.medijour.service.Journals)
                      - SQL table alias mapping - journals1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_0_2_}
                      - JOIN (JoinDefinedByMetadata(publisher)) : <gen:2> -> <gen:3>
                         - EntityQuerySpaceImpl(uid=<gen:3>, entity=com.crossover.medijour.service.Publisher)
                            - SQL table alias mapping - publisher2_
                            - alias suffix - 3_
                            - suffixed key columns - {id1_1_3_}

2016-08-15 12:48:39.588 DEBUG 18133 --- [           main] o.h.l.collection.plan.CollectionLoader   : Static select for collection com.crossover.medijour.service.Subscriber.subscriptions: select subscripti0_.subid as subid3_2_0_, subscripti0_.id as id1_3_0_, subscripti0_.id as id1_3_1_, subscripti0_.jrnid as jrnid2_3_1_, subscripti0_.subid as subid3_3_1_, journals1_.id as id1_0_2_, journals1_.available as availabl2_0_2_, journals1_.header as header3_0_2_, journals1_.path as path4_0_2_, journals1_.pubid as pubid5_0_2_, publisher2_.id as id1_1_3_, publisher2_.email as email2_1_3_, publisher2_.name as name3_1_3_, publisher2_.provunq as provunq4_1_3_ from subscription subscripti0_ left outer join journals journals1_ on subscripti0_.jrnid=journals1_.id left outer join publisher publisher2_ on journals1_.pubid=publisher2_.id where subscripti0_.subid=?
2016-08-15 12:48:39.588 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c0a01fe]
2016-08-15 12:48:39.588 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a2e9481]
2016-08-15 12:48:39.588 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : journal
2016-08-15 12:48:39.588 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : journal
2016-08-15 12:48:39.588 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber
2016-08-15 12:48:39.588 DEBUG 18133 --- [           main] o.h.l.p.b.i.spaces.QuerySpacesImpl       : Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15ba9bb7]
2016-08-15 12:48:39.588 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber.name
2016-08-15 12:48:39.589 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber.providerUnique
2016-08-15 12:48:39.589 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Visiting attribute path : subscriber.subscriptions
2016-08-15 12:48:39.589 DEBUG 18133 --- [           main] o.h.p.walking.spi.MetamodelGraphWalker   : Property path deemed to be circular : subscriber.subscriptions
2016-08-15 12:48:39.589 DEBUG 18133 --- [           main] lanBuildingAssociationVisitationStrategy : Building LoadPlan...
2016-08-15 12:48:39.589 DEBUG 18133 --- [           main] h.l.p.e.i.LoadQueryJoinAndFetchProcessor : processing queryspace <gen:0>
2016-08-15 12:48:39.589 DEBUG 18133 --- [           main] o.h.l.p.build.spi.LoadPlanTreePrinter    : LoadPlan(collection=com.crossover.medijour.service.Journals.subscriptions)
    - Returns
       - CollectionReturnImpl(collection=com.crossover.medijour.service.Journals.subscriptions, querySpaceUid=<gen:0>, path=[com.crossover.medijour.service.Journals.subscriptions])
          - (collection element) CollectionFetchableElementEntityGraph(entity=com.crossover.medijour.service.Subscription, querySpaceUid=<gen:1>, path=[com.crossover.medijour.service.Journals.subscriptions].<elements>)
             - EntityAttributeFetchImpl(entity=com.crossover.medijour.service.Subscriber, querySpaceUid=<gen:2>, path=[com.crossover.medijour.service.Journals.subscriptions].<elements>.subscriber)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=com.crossover.medijour.service.Journals.subscriptions)
          - SQL table alias mapping - subscripti0_
          - alias suffix - 0_
          - suffixed key columns - {jrnid2_0_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - id1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=com.crossover.medijour.service.Subscription)
                - SQL table alias mapping - subscripti0_
                - alias suffix - 1_
                - suffixed key columns - {id1_3_1_}
                - JOIN (JoinDefinedByMetadata(subscriber)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=com.crossover.medijour.service.Subscriber)
                      - SQL table alias mapping - subscriber1_
                      - alias suffix - 2_
                      - suffixed key columns - {id1_2_2_}

2016-08-15 12:48:39.589 DEBUG 18133 --- [           main] o.h.l.collection.plan.CollectionLoader   : Static select for collection com.crossover.medijour.service.Journals.subscriptions: select subscripti0_.jrnid as jrnid2_0_0_, subscripti0_.id as id1_3_0_, subscripti0_.id as id1_3_1_, subscripti0_.jrnid as jrnid2_3_1_, subscripti0_.subid as subid3_3_1_, subscriber1_.id as id1_2_2_, subscriber1_.name as name2_2_2_, subscriber1_.provider_unique as provider3_2_2_ from subscription subscripti0_ left outer join subscriber subscriber1_ on subscripti0_.subid=subscriber1_.id where subscripti0_.jrnid=?
2016-08-15 12:48:39.591 DEBUG 18133 --- [           main] o.h.internal.SessionFactoryRegistry      : Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@27c85fa5
2016-08-15 12:48:39.592 DEBUG 18133 --- [           main] o.h.internal.SessionFactoryRegistry      : Registering SessionFactory: 5f871ae8-b4b0-43e6-a71f-b0785c713e70 (<unnamed>)
2016-08-15 12:48:39.592 DEBUG 18133 --- [           main] o.h.internal.SessionFactoryRegistry      : Not binding SessionFactory to JNDI, no JNDI name configured
2016-08-15 12:48:39.592 DEBUG 18133 --- [           main] o.hibernate.internal.SessionFactoryImpl  : Instantiated session factory
2016-08-15 12:48:39.592 DEBUG 18133 --- [           main] o.h.internal.NamedQueryRepository        : Checking 4 named HQL queries
2016-08-15 12:48:39.592 DEBUG 18133 --- [           main] o.h.internal.NamedQueryRepository        : Checking named query: Journals.findAll
2016-08-15 12:48:39.630 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT j FROM com.crossover.medijour.service.Journals j
2016-08-15 12:48:39.640 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'crossover'
       |     |  |  |  \-[IDENT] Node: 'medijour'
       |     |  |  \-[IDENT] Node: 'service'
       |     |  \-[IDENT] Node: 'Journals'
       |     \-[ALIAS] Node: 'j'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'j'

2016-08-15 12:48:39.640 DEBUG 18133 --- [           main] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:48:39.666 DEBUG 18133 --- [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2016-08-15 12:48:39.683 DEBUG 18133 --- [           main] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.crossover.medijour.service.Journals (j) -> journals0_
2016-08-15 12:48:39.686 DEBUG 18133 --- [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : j -> journals0_.id
2016-08-15 12:48:39.688 DEBUG 18133 --- [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2016-08-15 12:48:39.688 DEBUG 18133 --- [           main] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} journals0_.id ) ( FromClause{level=1} journals journals0_ ) )
2016-08-15 12:48:39.695 DEBUG 18133 --- [           main] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [journals journals0_]
2016-08-15 12:48:39.695 DEBUG 18133 --- [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2016-08-15 12:48:39.697 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (journals)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journals0_.id as id1_0_' {alias=j, className=com.crossover.medijour.service.Journals, tableAlias=journals0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journals0_.available as availabl2_0_, journals0_.header as header3_0_, journals0_.path as path4_0_, journals0_.pubid as pubid5_0_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[j], fromElementByTableAlias=[journals0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'journals journals0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=j,role=null,tableName=journals,tableAlias=journals0_,origin=null,columns={,className=com.crossover.medijour.service.Journals}}

2016-08-15 12:48:39.697 DEBUG 18133 --- [           main] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:48:39.706 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT j FROM com.crossover.medijour.service.Journals j
2016-08-15 12:48:39.706 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select journals0_.id as id1_0_, journals0_.available as availabl2_0_, journals0_.header as header3_0_, journals0_.path as path4_0_, journals0_.pubid as pubid5_0_ from journals journals0_
2016-08-15 12:48:39.706 DEBUG 18133 --- [           main] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:48:39.711 DEBUG 18133 --- [           main] o.h.internal.NamedQueryRepository        : Checking named query: Publisher.findAll
2016-08-15 12:48:39.712 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT p FROM com.crossover.medijour.service.Publisher p
2016-08-15 12:48:39.714 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'crossover'
       |     |  |  |  \-[IDENT] Node: 'medijour'
       |     |  |  \-[IDENT] Node: 'service'
       |     |  \-[IDENT] Node: 'Publisher'
       |     \-[ALIAS] Node: 'p'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 'p'

2016-08-15 12:48:39.714 DEBUG 18133 --- [           main] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:48:39.714 DEBUG 18133 --- [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2016-08-15 12:48:39.714 DEBUG 18133 --- [           main] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.crossover.medijour.service.Publisher (p) -> publisher0_
2016-08-15 12:48:39.715 DEBUG 18133 --- [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : p -> publisher0_.id
2016-08-15 12:48:39.715 DEBUG 18133 --- [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2016-08-15 12:48:39.715 DEBUG 18133 --- [           main] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} publisher0_.id ) ( FromClause{level=1} publisher publisher0_ ) )
2016-08-15 12:48:39.715 DEBUG 18133 --- [           main] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [publisher publisher0_]
2016-08-15 12:48:39.715 DEBUG 18133 --- [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2016-08-15 12:48:39.715 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (publisher)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'publisher0_.id as id1_1_' {alias=p, className=com.crossover.medijour.service.Publisher, tableAlias=publisher0_}
    |  \-[SQL_TOKEN] SqlFragment: 'publisher0_.email as email2_1_, publisher0_.name as name3_1_, publisher0_.provunq as provunq4_1_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[p], fromElementByTableAlias=[publisher0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'publisher publisher0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=p,role=null,tableName=publisher,tableAlias=publisher0_,origin=null,columns={,className=com.crossover.medijour.service.Publisher}}

2016-08-15 12:48:39.715 DEBUG 18133 --- [           main] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:48:39.715 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT p FROM com.crossover.medijour.service.Publisher p
2016-08-15 12:48:39.716 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select publisher0_.id as id1_1_, publisher0_.email as email2_1_, publisher0_.name as name3_1_, publisher0_.provunq as provunq4_1_ from publisher publisher0_
2016-08-15 12:48:39.716 DEBUG 18133 --- [           main] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:48:39.716 DEBUG 18133 --- [           main] o.h.internal.NamedQueryRepository        : Checking named query: Subscription.findAll
2016-08-15 12:48:39.717 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT s FROM com.crossover.medijour.service.Subscription s
2016-08-15 12:48:39.720 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'crossover'
       |     |  |  |  \-[IDENT] Node: 'medijour'
       |     |  |  \-[IDENT] Node: 'service'
       |     |  \-[IDENT] Node: 'Subscription'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

2016-08-15 12:48:39.720 DEBUG 18133 --- [           main] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:48:39.720 DEBUG 18133 --- [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2016-08-15 12:48:39.721 DEBUG 18133 --- [           main] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.crossover.medijour.service.Subscription (s) -> subscripti0_
2016-08-15 12:48:39.722 DEBUG 18133 --- [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s -> subscripti0_.id
2016-08-15 12:48:39.722 DEBUG 18133 --- [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2016-08-15 12:48:39.722 DEBUG 18133 --- [           main] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} subscripti0_.id ) ( FromClause{level=1} subscription subscripti0_ ) )
2016-08-15 12:48:39.722 DEBUG 18133 --- [           main] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [subscription subscripti0_]
2016-08-15 12:48:39.722 DEBUG 18133 --- [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2016-08-15 12:48:39.722 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (subscription)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'subscripti0_.id as id1_3_' {alias=s, className=com.crossover.medijour.service.Subscription, tableAlias=subscripti0_}
    |  \-[SQL_TOKEN] SqlFragment: 'subscripti0_.jrnid as jrnid2_3_, subscripti0_.subid as subid3_3_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[subscripti0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'subscription subscripti0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=subscription,tableAlias=subscripti0_,origin=null,columns={,className=com.crossover.medijour.service.Subscription}}

2016-08-15 12:48:39.722 DEBUG 18133 --- [           main] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:48:39.722 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT s FROM com.crossover.medijour.service.Subscription s
2016-08-15 12:48:39.722 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select subscripti0_.id as id1_3_, subscripti0_.jrnid as jrnid2_3_, subscripti0_.subid as subid3_3_ from subscription subscripti0_
2016-08-15 12:48:39.722 DEBUG 18133 --- [           main] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:48:39.723 DEBUG 18133 --- [           main] o.h.internal.NamedQueryRepository        : Checking named query: Subscriber.findAll
2016-08-15 12:48:39.726 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: SELECT s FROM com.crossover.medijour.service.Subscriber s
2016-08-15 12:48:39.729 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'FROM'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'crossover'
       |     |  |  |  \-[IDENT] Node: 'medijour'
       |     |  |  \-[IDENT] Node: 'service'
       |     |  \-[IDENT] Node: 'Subscriber'
       |     \-[ALIAS] Node: 's'
       \-[SELECT] Node: 'SELECT'
          \-[IDENT] Node: 's'

2016-08-15 12:48:39.730 DEBUG 18133 --- [           main] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:48:39.730 DEBUG 18133 --- [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2016-08-15 12:48:39.731 DEBUG 18133 --- [           main] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.crossover.medijour.service.Subscriber (s) -> subscriber0_
2016-08-15 12:48:39.731 DEBUG 18133 --- [           main] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : s -> subscriber0_.id
2016-08-15 12:48:39.731 DEBUG 18133 --- [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2016-08-15 12:48:39.731 DEBUG 18133 --- [           main] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} subscriber0_.id ) ( FromClause{level=1} subscriber subscriber0_ ) )
2016-08-15 12:48:39.731 DEBUG 18133 --- [           main] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [subscriber subscriber0_]
2016-08-15 12:48:39.731 DEBUG 18133 --- [           main] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2016-08-15 12:48:39.732 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (subscriber)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'subscriber0_.id as id1_2_' {alias=s, className=com.crossover.medijour.service.Subscriber, tableAlias=subscriber0_}
    |  \-[SQL_TOKEN] SqlFragment: 'subscriber0_.name as name2_2_, subscriber0_.provider_unique as provider3_2_'
    \-[FROM] FromClause: 'FROM' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[s], fromElementByTableAlias=[subscriber0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'subscriber subscriber0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=s,role=null,tableName=subscriber,tableAlias=subscriber0_,origin=null,columns={,className=com.crossover.medijour.service.Subscriber}}

2016-08-15 12:48:39.732 DEBUG 18133 --- [           main] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:48:39.732 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: SELECT s FROM com.crossover.medijour.service.Subscriber s
2016-08-15 12:48:39.733 DEBUG 18133 --- [           main] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select subscriber0_.id as id1_2_, subscriber0_.name as name2_2_, subscriber0_.provider_unique as provider3_2_ from subscriber subscriber0_
2016-08-15 12:48:39.733 DEBUG 18133 --- [           main] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:48:39.733 DEBUG 18133 --- [           main] o.h.internal.NamedQueryRepository        : Checking 0 named SQL queries
2016-08-15 12:48:39.740 DEBUG 18133 --- [           main] o.h.stat.internal.StatisticsInitiator    : Statistics initialized [enabled=false]
2016-08-15 12:48:39.745 DEBUG 18133 --- [           main] o.h.j.i.schemagen.JpaSchemaGenerator     : No actions specified; doing nothing
2016-08-15 12:48:39.800 DEBUG 18133 --- [           main] o.h.j.i.EntityManagerFactoryRegistry     : Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@6771957f
2016-08-15 12:48:39.801 DEBUG 18133 --- [           main] o.h.j.i.EntityManagerFactoryRegistry     : Registering EntityManagerFactory: default 
2016-08-15 12:48:40.264 DEBUG 18133 --- [           main] o.h.jpa.spi.AbstractEntityManagerImpl    : Mark transaction for rollback
2016-08-15 12:48:40.538 DEBUG 18133 --- [           main] o.h.jpa.spi.AbstractEntityManagerImpl    : Mark transaction for rollback
2016-08-15 12:48:40.541 DEBUG 18133 --- [           main] o.h.jpa.spi.AbstractEntityManagerImpl    : Mark transaction for rollback
2016-08-15 12:48:40.585 DEBUG 18133 --- [           main] o.h.v.i.e.r.DefaultTraversableResolver   : Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
2016-08-15 12:48:40.585 DEBUG 18133 --- [           main] o.h.v.i.e.r.DefaultTraversableResolver   : Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
2016-08-15 12:48:40.586 DEBUG 18133 --- [           main] o.h.v.internal.engine.ConfigurationImpl  : Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
2016-08-15 12:48:40.586 DEBUG 18133 --- [           main] o.h.v.internal.engine.ConfigurationImpl  : Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
2016-08-15 12:48:40.586 DEBUG 18133 --- [           main] o.h.v.internal.engine.ConfigurationImpl  : Setting custom ParameterNameProvider of type com.sun.proxy.$Proxy81
2016-08-15 12:48:40.586 DEBUG 18133 --- [           main] o.h.v.internal.xml.ValidationXmlParser   : Trying to load META-INF/validation.xml for XML based Validator configuration.
2016-08-15 12:48:40.586 DEBUG 18133 --- [           main] o.h.v.internal.xml.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via user class loader
2016-08-15 12:48:40.586 DEBUG 18133 --- [           main] o.h.v.internal.xml.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via TCCL
2016-08-15 12:48:40.586 DEBUG 18133 --- [           main] o.h.v.internal.xml.ResourceLoaderHelper  : Trying to load META-INF/validation.xml via Hibernate Validator's class loader
2016-08-15 12:48:40.586 DEBUG 18133 --- [           main] o.h.v.internal.xml.ValidationXmlParser   : No META-INF/validation.xml found. Using annotation based configuration only.
2016-08-15 12:48:40.649  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@490c293f: startup date [Mon Aug 15 12:48:31 BRT 2016]; root of context hierarchy
2016-08-15 12:48:40.663  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Detected ResponseBodyAdvice bean in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2016-08-15 12:48:40.753 DEBUG 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Looking for request mappings in application context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@490c293f: startup date [Mon Aug 15 12:48:31 BRT 2016]; root of context hierarchy
2016-08-15 12:48:40.770 DEBUG 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : 5 request handler methods found on class com.crossover.medijour.service.ProfileController: {public com.crossover.medijour.service.Profile com.crossover.medijour.service.ProfileController.get(java.lang.Long)={[/api/v1/profiles/{id}],methods=[GET]}, public com.crossover.medijour.service.Profile com.crossover.medijour.service.ProfileController.update(java.lang.Long,com.crossover.medijour.service.Profile)={[/api/v1/profiles/{id}],methods=[PUT]}, public com.crossover.medijour.service.Profile com.crossover.medijour.service.ProfileController.delete(java.lang.Long)={[/api/v1/profiles/{id}],methods=[DELETE]}, public com.crossover.medijour.service.Profile com.crossover.medijour.service.ProfileController.create(com.crossover.medijour.service.Profile,java.security.Principal)={[/api/v1/profiles],methods=[POST]}, public java.util.List com.crossover.medijour.service.ProfileController.list()={[/api/v1/profiles],methods=[GET]}}
2016-08-15 12:48:40.771  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/profiles/{id}],methods=[GET]}" onto public com.crossover.medijour.service.Profile com.crossover.medijour.service.ProfileController.get(java.lang.Long)
2016-08-15 12:48:40.772  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/profiles/{id}],methods=[PUT]}" onto public com.crossover.medijour.service.Profile com.crossover.medijour.service.ProfileController.update(java.lang.Long,com.crossover.medijour.service.Profile)
2016-08-15 12:48:40.772  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/profiles/{id}],methods=[DELETE]}" onto public com.crossover.medijour.service.Profile com.crossover.medijour.service.ProfileController.delete(java.lang.Long)
2016-08-15 12:48:40.772  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/profiles],methods=[POST]}" onto public com.crossover.medijour.service.Profile com.crossover.medijour.service.ProfileController.create(com.crossover.medijour.service.Profile,java.security.Principal)
2016-08-15 12:48:40.772  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/profiles],methods=[GET]}" onto public java.util.List<com.crossover.medijour.service.Profile> com.crossover.medijour.service.ProfileController.list()
2016-08-15 12:48:40.774 DEBUG 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : 1 request handler methods found on class com.crossover.medijour.service.ListingController: {public org.springframework.data.domain.Page com.crossover.medijour.service.ListingController.findJournalsForPublicUsers(int,int)={[/listing],methods=[GET],consumes=[*/*],produces=[application/json]}}
2016-08-15 12:48:40.774  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/listing],methods=[GET],consumes=[*/*],produces=[application/json]}" onto public org.springframework.data.domain.Page<com.crossover.medijour.service.Journals> com.crossover.medijour.service.ListingController.findJournalsForPublicUsers(int,int)
2016-08-15 12:48:40.775 DEBUG 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : 4 request handler methods found on class com.crossover.medijour.service.PingController: {public java.lang.String com.crossover.medijour.service.PingController.ping()={[/ping]}, public java.lang.String com.crossover.medijour.service.PingController.pong()={[/pong]}, public java.lang.String com.crossover.medijour.service.PingController.securedPing()={[/secured/ping]}, public java.lang.String com.crossover.medijour.service.PingController.securedApiv1Ping()={[/api/v1/ping]}}
2016-08-15 12:48:40.776  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/ping]}" onto public java.lang.String com.crossover.medijour.service.PingController.ping()
2016-08-15 12:48:40.776  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/pong]}" onto public java.lang.String com.crossover.medijour.service.PingController.pong()
2016-08-15 12:48:40.776  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/secured/ping]}" onto public java.lang.String com.crossover.medijour.service.PingController.securedPing()
2016-08-15 12:48:40.776  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/api/v1/ping]}" onto public java.lang.String com.crossover.medijour.service.PingController.securedApiv1Ping()
2016-08-15 12:48:40.781 DEBUG 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : 2 request handler methods found on class org.springframework.boot.autoconfigure.web.BasicErrorController: {public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)={[/error],produces=[text/html]}, public org.springframework.http.ResponseEntity org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)={[/error]}}
2016-08-15 12:48:40.781  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2016-08-15 12:48:40.781  INFO 18133 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2016-08-15 12:48:40.863 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Looking for URL mappings in application context: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@490c293f: startup date [Mon Aug 15 12:48:31 BRT 2016]; root of context hierarchy
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.context.annotation.internalRequiredAnnotationProcessor': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.context.annotation.internalCommonAnnotationProcessor': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.context.event.internalEventListenerProcessor': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.context.event.internalEventListenerFactory': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'app': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'profileController': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'appConfig': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'auth0Client': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'listingController': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'pingController': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'usernameService': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'profileRepositoryStub': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'profileService': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'auth0CORSFilter': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'authenticationManagerBuilder': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'enableGlobalAuthenticationAutowiredConfigurer': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'delegatingApplicationListener': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'webSecurityExpressionHandler': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'springSecurityFilterChain': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'privilegeEvaluator': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'autowiredWebSecurityConfigurersIgnoreParents': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'objectPostProcessor': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'requestDataValueProcessor': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'methodSecurityInterceptor': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'methodSecurityMetadataSource': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'preInvocationAuthorizationAdvice': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'auth0AuthenticationManager': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'simpleCORSFilter': no URL paths identified
2016-08-15 12:48:40.864 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'auth0AuthenticationProvider': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'auth0EntryPoint': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'auth0Filter': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'auth0AuthenticationFilterRegistration': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'metaDataSourceAdvisor': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.aop.config.internalAutoProxyCreator': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.AutoConfigurationPackages': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.PropertyPlaceholderAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.condition.BeanTypeRegistry': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'propertySourcesPlaceholderConfigurer': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration$TomcatWebSocketConfiguration': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'websocketContainerCustomizer': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.websocket.WebSocketAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration$EmbeddedTomcat': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'tomcatEmbeddedServletContainerFactory': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.EmbeddedServletContainerAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'embeddedServletContainerCustomizerBeanPostProcessor': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration$DispatcherServletConfiguration': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'dispatcherServlet': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'dispatcherServletRegistration': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'spring.mvc.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.store': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.DispatcherServletAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration$WhitelabelErrorViewConfiguration': no URL paths identified
2016-08-15 12:48:40.865 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'error': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'beanNameViewResolver': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.ErrorMvcAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'errorAttributes': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'basicErrorController': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'errorPageCustomizer': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'preserveErrorControllerTargetClassPostProcessor': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$EnableWebMvcConfiguration': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'requestMappingHandlerAdapter': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'requestMappingHandlerMapping': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'mvcContentNegotiationManager': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'viewControllerHandlerMapping': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'beanNameHandlerMapping': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'resourceHandlerMapping': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'mvcResourceUrlProvider': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'defaultServletHandlerMapping': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'mvcConversionService': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'mvcValidator': no URL paths identified
2016-08-15 12:48:40.866 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'mvcPathMatcher': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'mvcUrlPathHelper': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'mvcUriComponentsContributor': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'httpRequestHandlerAdapter': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'simpleControllerHandlerAdapter': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'handlerExceptionResolver': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'mvcViewResolver': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter$FaviconConfiguration': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'faviconHandlerMapping': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'faviconRequestHandler': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration$WebMvcAutoConfigurationAdapter': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'defaultViewResolver': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'requestContextFilter': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'viewResolver': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'spring.resources.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.WebMvcAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'hiddenHttpMethodFilter': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'httpPutFormContentFilter': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.AuditAutoConfiguration$AuditEventRepositoryConfiguration': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'auditEventRepository': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.AuditAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'auditListener': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'authenticationAuditListener': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'authorizationAuditListener': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.security.BootGlobalAuthenticationConfiguration': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'bootGlobalAuthenticationConfigurationAdapter': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.security.SecurityAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'authenticationEventPublisher': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'securityProperties': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$ManagementWebSecurityConfigurerAdapter': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$ManagementSecurityPropertiesConfiguration': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'ignoredPathsWebSecurityConfigurerAdapter': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.transaction.jta.JtaAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'spring.jta.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$JdbcTemplateConfiguration': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'jdbcTemplate': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'namedParameterJdbcTemplate': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$NonEmbeddedConfiguration': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'dataSource': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration$DataSourceInitializerConfiguration': no URL paths identified
2016-08-15 12:48:40.867 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'dataSourceInitializer': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration$TomcatDataSourcePoolMetadataProviderConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'tomcatPoolDataSourceMetadataProvider': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.jdbc.metadata.DataSourcePoolMetadataProvidersConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'spring.datasource.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'dataSourceInitializerPostProcessor': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'openEntityManagerInViewInterceptor': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'transactionManager': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'jpaVendorAdapter': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'entityManagerFactoryBuilder': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'entityManagerFactory': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'spring.jpa.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'dataSourceInitializedPublisher': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.HealthIndicatorAutoConfiguration$DiskSpaceHealthIndicatorConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'diskSpaceHealthIndicator': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'diskSpaceHealthIndicatorProperties': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.HealthIndicatorAutoConfiguration$DataSourcesHealthIndicatorConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'dbHealthIndicator': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.HealthIndicatorAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'healthAggregator': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'management.health.status.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.MetricRepositoryAutoConfiguration$FastMetricServicesConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'counterBuffers': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'gaugeBuffers': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'actuatorMetricReader': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'counterService': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'gaugeService': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.MetricRepositoryAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.jmx.JmxAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'mbeanExporter': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'objectNamingStrategy': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'mbeanServer': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.PublicMetricsAutoConfiguration$TomcatMetricsConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'tomcatPublicMetrics': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.PublicMetricsAutoConfiguration$DataSourceMetricsConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'dataSourcePublicMetrics': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.PublicMetricsAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'systemPublicMetrics': no URL paths identified
2016-08-15 12:48:40.868 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'metricReaderPublicMetrics': no URL paths identified
2016-08-15 12:48:40.869 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.EndpointAutoConfiguration$InfoPropertiesConfiguration': no URL paths identified
2016-08-15 12:48:40.869 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.EndpointAutoConfiguration$RequestMappingEndpointConfiguration': no URL paths identified
2016-08-15 12:48:40.869 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'requestMappingEndpoint': no URL paths identified
2016-08-15 12:48:40.869 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.EndpointAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.869 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'environmentEndpoint': no URL paths identified
2016-08-15 12:48:40.869 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'healthEndpoint': no URL paths identified
2016-08-15 12:48:40.869 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'beansEndpoint': no URL paths identified
2016-08-15 12:48:40.869 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'infoEndpoint': no URL paths identified
2016-08-15 12:48:40.869 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'metricsEndpoint': no URL paths identified
2016-08-15 12:48:40.869 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'traceEndpoint': no URL paths identified
2016-08-15 12:48:40.870 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'dumpEndpoint': no URL paths identified
2016-08-15 12:48:40.870 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'autoConfigurationReportEndpoint': no URL paths identified
2016-08-15 12:48:40.870 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'shutdownEndpoint': no URL paths identified
2016-08-15 12:48:40.870 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'configurationPropertiesReportEndpoint': no URL paths identified
2016-08-15 12:48:40.870 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'endpoints.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.870 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.EndpointMBeanExportAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.870 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'endpointMBeanExporter': no URL paths identified
2016-08-15 12:48:40.870 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'endpoints.jmx.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.873 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.ServerPropertiesAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'serverProperties': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'duplicateServerPropertiesDetector': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.ManagementServerPropertiesAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'managementServerProperties': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'gson': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperBuilderConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'jacksonObjectMapperBuilder': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'spring.jackson.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration$JacksonObjectMapperConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'jacksonObjectMapper': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.HttpMessageConvertersAutoConfiguration$StringHttpMessageConverterConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'stringHttpMessageConverter': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'spring.http.encoding.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.JacksonHttpMessageConvertersConfiguration$MappingJackson2HttpMessageConverterConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'mappingJackson2HttpMessageConverter': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.JacksonHttpMessageConvertersConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.GsonHttpMessageConvertersConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.HttpMessageConvertersAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'messageConverters': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration$EntityLinksConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'entityLinksPluginRegistry': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'controllerEntityLinks': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'delegatingEntityLinks': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.hateoas.config.HateoasConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'linkRelationMessageSource': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration$HypermediaConfiguration': no URL paths identified
2016-08-15 12:48:40.874 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'halObjectMapperConfigurer': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name '_halObjectMapper': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.hateoas.config.HypermediaSupportBeanDefinitionRegistrar$DefaultObjectMapperCustomizer#0': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.hateoas.config.HypermediaSupportBeanDefinitionRegistrar$Jackson2ModuleRegisteringBeanPostProcessor#0': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name '_linkDiscovererRegistry': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.hateoas.LinkDiscoverers#0': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'defaultRelProvider': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'annotationRelProvider': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'relProviderPluginRegistry': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name '_relProvider': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.hateoas.HypermediaHttpMessageConverterConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'halMessageConverterSupportedMediaTypeCustomizer': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.hateoas.HypermediaAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'spring.hateoas.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.EndpointWebMvcManagementContextConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'endpointHandlerMapping': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'mvcEndpoints': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'environmentMvcEndpoint': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'healthMvcEndpoint': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'metricsMvcEndpoint': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'endpoints.health.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'endpoints.cors.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'managementServletContext': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'halJsonMvcEndpoint': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$EndpointWebMvcConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextFilterConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'applicationContextIdFilter': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'managementContextResolver': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfiguration$MetricExportPropertiesConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'spring.metrics.export.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.scheduling.annotation.SchedulingConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.context.annotation.internalScheduledAnnotationProcessor': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.MetricExportAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'metricWritersMetricExporter': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'metricFilter': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.TraceRepositoryAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'traceRepository': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.actuate.autoconfigure.TraceWebFilterAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.875 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'webRequestLoggingFilter': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'management.trace.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration$JdkDynamicAutoProxyConfiguration': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.aop.AopAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.context.ConfigurationPropertiesAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.dao.PersistenceExceptionTranslationAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'persistenceExceptionTranslationPostProcessor': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.data.repository.core.support.RepositoryInterfaceAwareBeanPostProcessor': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'emBeanDefinitionRegistrarPostProcessor': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'jpaMappingContext': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'jpaContext': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'publisherRepository': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'journalsRepository': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.data.web.config.HateoasAwareSpringDataWebConfiguration': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'pageableResolver': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'sortResolver': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'pagedResourcesAssembler': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'pagedResourcesAssemblerArgumentResolver': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.data.web.config.SpringDataJacksonConfiguration': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'jacksonGeoModule': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.data.web.SpringDataWebAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.877 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.transaction.config.internalTransactionAdvisor': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'transactionAttributeSource': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'transactionInterceptor': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.transaction.config.internalTransactionalEventListenerFactory': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration$TransactionManagementConfiguration': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.security.SecurityFilterAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'securityFilterChainRegistration': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'transactionTemplate': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.HttpEncodingAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'characterEncodingFilter': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.boot.autoconfigure.web.MultipartAutoConfiguration': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'multipartConfigElement': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'multipartResolver': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'multipart.CONFIGURATION_PROPERTIES': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.orm.jpa.SharedEntityManagerCreator#0': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'autoConfigurationReport': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'applicationEventMulticaster': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'springApplicationArguments': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'springBootLoggingSystem': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'environment': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'systemProperties': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'systemEnvironment': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importRegistry': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'messageSource': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'servletContext': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'contextParameters': no URL paths identified
2016-08-15 12:48:40.878 DEBUG 18133 --- [           main] o.s.w.s.h.BeanNameUrlHandlerMapping      : Rejected bean name 'contextAttributes': no URL paths identified
2016-08-15 12:48:40.887 DEBUG 18133 --- [           main] o.s.w.s.c.a.WebMvcConfigurerAdapter      : Default resource handling disabled
2016-08-15 12:48:40.913 DEBUG 18133 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : Looking for exception mappings: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@490c293f: startup date [Mon Aug 15 12:48:31 BRT 2016]; root of context hierarchy
2016-08-15 12:48:40.918  INFO 18133 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : Detected ResponseBodyAdvice implementation in org.springframework.boot.actuate.autoconfigure.EndpointWebMvcHypermediaManagementContextConfiguration$ActuatorEndpointLinksAdvice
2016-08-15 12:48:40.959  INFO 18133 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2016-08-15 12:48:41.575  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-08-15 12:48:41.576  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-08-15 12:48:41.577  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2016-08-15 12:48:41.577  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/env || /env.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-08-15 12:48:41.577  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2016-08-15 12:48:41.577  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-08-15 12:48:41.578  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-08-15 12:48:41.578  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/health || /health.json],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(java.security.Principal)
2016-08-15 12:48:41.579  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-08-15 12:48:41.579  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-08-15 12:48:41.580  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/actuator || /actuator.json],produces=[application/json]}" onto public org.springframework.hateoas.ResourceSupport org.springframework.boot.actuate.endpoint.mvc.HalJsonMvcEndpoint.links()
2016-08-15 12:48:41.580  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/info || /info.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-08-15 12:48:41.580  INFO 18133 --- [           main] o.s.b.a.e.mvc.EndpointHandlerMapping     : Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2016-08-15 12:48:41.751  INFO 18133 --- [           main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2016-08-15 12:48:41.766 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Adding [Management Server] PropertySource with lowest search precedence
2016-08-15 12:48:41.772  INFO 18133 --- [           main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2016-08-15 12:48:41.952 DEBUG 18133 --- [           main] o.s.w.s.resource.ResourceUrlProvider     : Looking for resource handler mappings
2016-08-15 12:48:41.955 DEBUG 18133 --- [           main] o.s.w.s.resource.ResourceUrlProvider     : Found resource handler mapping: URL pattern="/**/favicon.ico", locations=[ServletContext resource [/], class path resource [META-INF/resources/], class path resource [resources/], class path resource [static/], class path resource [public/], class path resource []], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@1039907a]
2016-08-15 12:48:42.040  INFO 18133 --- [           main] s.b.c.e.t.TomcatEmbeddedServletContainer : Tomcat started on port(s): 8082 (http)
2016-08-15 12:48:42.042 DEBUG 18133 --- [           main] o.s.w.c.s.StandardServletEnvironment     : Adding [server.ports] PropertySource with highest search precedence
2016-08-15 12:48:42.051  INFO 18133 --- [           main] com.crossover.medijour.service.App       : Started App in 11.168 seconds (JVM running for 18.934)
2016-08-15 12:49:36.216 DEBUG 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing servlet 'dispatcherServlet'
2016-08-15 12:49:36.220  INFO 18133 --- [nio-8082-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2016-08-15 12:49:36.221  INFO 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2016-08-15 12:49:36.221 DEBUG 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Using MultipartResolver [org.springframework.web.multipart.support.StandardServletMultipartResolver@2a9154f1]
2016-08-15 12:49:36.224 DEBUG 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@40a50f76]
2016-08-15 12:49:36.227 DEBUG 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@21f2b139]
2016-08-15 12:49:36.233 DEBUG 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@6c0c90ec]
2016-08-15 12:49:36.239 DEBUG 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@5e8a7a1d]
2016-08-15 12:49:36.239 DEBUG 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Published WebApplicationContext of servlet 'dispatcherServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.dispatcherServlet]
2016-08-15 12:49:36.239  INFO 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2016-08-15 12:49:36.239 DEBUG 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Servlet 'dispatcherServlet' configured successfully
2016-08-15 12:49:36.267  INFO 18133 --- [nio-8082-exec-1] Spring Security Debugger                 : 

************************************************************

Request received for OPTIONS '/listing':

org.apache.catalina.connector.RequestFacade@2fdac601

servletPath:/listing
pathInfo:null
headers: 
host: localhost:8082
connection: keep-alive
access-control-request-method: GET
origin: http://localhost:3000
user-agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36
access-control-request-headers: accept, authorization
accept: */*
referer: http://localhost:3000/
accept-encoding: gzip, deflate, sdch
accept-language: pt-BR,pt;q=0.8,en-US;q=0.6,en;q=0.4


Security filter chain: [] empty (bypassed by security='none') 


************************************************************


2016-08-15 12:49:36.276 DEBUG 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : DispatcherServlet with name 'dispatcherServlet' processing OPTIONS request for [/listing]
2016-08-15 12:49:36.287 DEBUG 18133 --- [nio-8082-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Looking up handler method for path /listing
2016-08-15 12:49:36.290 DEBUG 18133 --- [nio-8082-exec-1] s.w.s.m.m.a.RequestMappingHandlerMapping : Returning handler method [public org.springframework.data.domain.Page<com.crossover.medijour.service.Journals> com.crossover.medijour.service.ListingController.findJournalsForPublicUsers(int,int)]
2016-08-15 12:49:36.302 DEBUG 18133 --- [nio-8082-exec-1] o.s.web.cors.DefaultCorsProcessor        : Skip CORS processing: response already contains "Access-Control-Allow-Origin" header
2016-08-15 12:49:36.302 DEBUG 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
2016-08-15 12:49:36.304 DEBUG 18133 --- [nio-8082-exec-1] o.s.web.servlet.DispatcherServlet        : Successfully completed request
2016-08-15 12:49:36.344  INFO 18133 --- [nio-8082-exec-2] Spring Security Debugger                 : 

************************************************************

Request received for GET '/listing':

org.apache.catalina.connector.RequestFacade@2fdac601

servletPath:/listing
pathInfo:null
headers: 
host: localhost:8082
connection: keep-alive
accept: application/json
origin: http://localhost:3000
user-agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36
authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJST0xFX0FETUlOIiwiUk9MRV9VU0VSIl0sInVzZXJfaWQiOiJhdXRoMHw1Nzg2NTZlM2FhZmNjMDlhNTQwZTQ4MjIiLCJuYW1lIjoibWVkaWpvdXJAZ21haWwuY29tIiwibmlja25hbWUiOiJtZWRpam91ciIsImVtYWlsIjoibWVkaWpvdXJAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci8yOTFmYTE4YjhjNWQzZTJjNzlhZDU3MDE4ZGZlYmExND9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm1lLnBuZyIsImlzcyI6Imh0dHBzOi8vZGVzYXZlcmEuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDU3ODY1NmUzYWFmY2MwOWE1NDBlNDgyMiIsImF1ZCI6IlVxZWdDbmR4R1dWOFNqNXI0NGxaTmxUSnVUSndNWENPIiwiZXhwIjoxNDcxMzEyMTc0LCJpYXQiOjE0NzEyNzYxNzR9.X3OM7os2YiR6yZlAZ3-40bqIeVj8UQelY2mKWG-RuJw
referer: http://localhost:3000/
accept-encoding: gzip, deflate, sdch
accept-language: pt-BR,pt;q=0.8,en-US;q=0.6,en;q=0.4


Security filter chain: [
  WebAsyncManagerIntegrationFilter
  Auth0CORSFilter
  SecurityContextPersistenceFilter
  Auth0AuthenticationFilter
  HeaderWriterFilter
  LogoutFilter
  RequestCacheAwareFilter
  SecurityContextHolderAwareRequestFilter
  AnonymousAuthenticationFilter
  SessionManagementFilter
  ExceptionTranslationFilter
  FilterSecurityInterceptor
]


************************************************************


2016-08-15 12:49:36.352  INFO 18133 --- [nio-8082-exec-2] c.a.s.s.api.Auth0AuthenticationProvider  : Trying to authenticate with token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJST0xFX0FETUlOIiwiUk9MRV9VU0VSIl0sInVzZXJfaWQiOiJhdXRoMHw1Nzg2NTZlM2FhZmNjMDlhNTQwZTQ4MjIiLCJuYW1lIjoibWVkaWpvdXJAZ21haWwuY29tIiwibmlja25hbWUiOiJtZWRpam91ciIsImVtYWlsIjoibWVkaWpvdXJAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci8yOTFmYTE4YjhjNWQzZTJjNzlhZDU3MDE4ZGZlYmExND9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm1lLnBuZyIsImlzcyI6Imh0dHBzOi8vZGVzYXZlcmEuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDU3ODY1NmUzYWFmY2MwOWE1NDBlNDgyMiIsImF1ZCI6IlVxZWdDbmR4R1dWOFNqNXI0NGxaTmxUSnVUSndNWENPIiwiZXhwIjoxNDcxMzEyMTc0LCJpYXQiOjE0NzEyNzYxNzR9.X3OM7os2YiR6yZlAZ3-40bqIeVj8UQelY2mKWG-RuJw
2016-08-15 12:49:36.712 DEBUG 18133 --- [nio-8082-exec-2] o.s.web.servlet.DispatcherServlet        : DispatcherServlet with name 'dispatcherServlet' processing GET request for [/listing]
2016-08-15 12:49:36.718 DEBUG 18133 --- [nio-8082-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Looking up handler method for path /listing
2016-08-15 12:49:36.719 DEBUG 18133 --- [nio-8082-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Returning handler method [public org.springframework.data.domain.Page<com.crossover.medijour.service.Journals> com.crossover.medijour.service.ListingController.findJournalsForPublicUsers(int,int)]
2016-08-15 12:49:36.723 DEBUG 18133 --- [nio-8082-exec-2] o.s.web.servlet.DispatcherServlet        : Last-Modified value for [/listing] is: -1
2016-08-15 12:49:36.724 DEBUG 18133 --- [nio-8082-exec-2] o.s.web.cors.DefaultCorsProcessor        : Skip CORS processing: response already contains "Access-Control-Allow-Origin" header
2016-08-15 12:49:36.783 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.j.internal.LogicalConnectionImpl   : Obtaining JDBC connection
2016-08-15 12:49:36.811 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.j.internal.LogicalConnectionImpl   : Obtained JDBC connection
2016-08-15 12:49:36.811 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.t.spi.AbstractTransactionImpl      : begin
2016-08-15 12:49:36.811 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.t.internal.jdbc.JdbcTransaction    : initial autocommit status: true
2016-08-15 12:49:36.811 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.t.internal.jdbc.JdbcTransaction    : disabling autocommit
2016-08-15 12:49:36.819 DEBUG 18133 --- [nio-8082-exec-2] o.h.jpa.criteria.CriteriaQueryImpl       : Rendered criteria query -> select generatedAlias0 from Journals as generatedAlias0
2016-08-15 12:49:36.827 DEBUG 18133 --- [nio-8082-exec-2] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: select generatedAlias0 from com.crossover.medijour.service.Journals as generatedAlias0
2016-08-15 12:49:36.829 DEBUG 18133 --- [nio-8082-exec-2] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'crossover'
       |     |  |  |  \-[IDENT] Node: 'medijour'
       |     |  |  \-[IDENT] Node: 'service'
       |     |  \-[IDENT] Node: 'Journals'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

2016-08-15 12:49:36.829 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:49:36.829 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2016-08-15 12:49:36.829 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.crossover.medijour.service.Journals (generatedAlias0) -> journals0_
2016-08-15 12:49:36.830 DEBUG 18133 --- [nio-8082-exec-2] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : generatedAlias0 -> journals0_.id
2016-08-15 12:49:36.830 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2016-08-15 12:49:36.830 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} journals0_.id ) ( FromClause{level=1} journals journals0_ ) )
2016-08-15 12:49:36.830 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [journals journals0_]
2016-08-15 12:49:36.830 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2016-08-15 12:49:36.830 DEBUG 18133 --- [nio-8082-exec-2] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (journals)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'journals0_.id as id1_0_' {alias=generatedAlias0, className=com.crossover.medijour.service.Journals, tableAlias=journals0_}
    |  \-[SQL_TOKEN] SqlFragment: 'journals0_.available as availabl2_0_, journals0_.header as header3_0_, journals0_.path as path4_0_, journals0_.pubid as pubid5_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[journals0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'journals journals0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=journals,tableAlias=journals0_,origin=null,columns={,className=com.crossover.medijour.service.Journals}}

2016-08-15 12:49:36.830 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:49:36.830 DEBUG 18133 --- [nio-8082-exec-2] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: select generatedAlias0 from com.crossover.medijour.service.Journals as generatedAlias0
2016-08-15 12:49:36.830 DEBUG 18133 --- [nio-8082-exec-2] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select journals0_.id as id1_0_, journals0_.available as availabl2_0_, journals0_.header as header3_0_, journals0_.path as path4_0_, journals0_.pubid as pubid5_0_ from journals journals0_
2016-08-15 12:49:36.830 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:49:36.844 DEBUG 18133 --- [nio-8082-exec-2] o.h.jpa.criteria.CriteriaQueryImpl       : Rendered criteria query -> select count(generatedAlias0) from Journals as generatedAlias0
2016-08-15 12:49:36.845 DEBUG 18133 --- [nio-8082-exec-2] o.h.h.internal.ast.QueryTranslatorImpl   : parse() - HQL: select count(generatedAlias0) from com.crossover.medijour.service.Journals as generatedAlias0
2016-08-15 12:49:36.846 DEBUG 18133 --- [nio-8082-exec-2] o.h.h.internal.ast.QueryTranslatorImpl   : --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'crossover'
       |     |  |  |  \-[IDENT] Node: 'medijour'
       |     |  |  \-[IDENT] Node: 'service'
       |     |  \-[IDENT] Node: 'Journals'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[COUNT] Node: 'count'
             \-[IDENT] Node: 'generatedAlias0'

2016-08-15 12:49:36.846 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:49:36.847 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select << begin [level=1, statement=select]
2016-08-15 12:49:36.847 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.ast.tree.FromElement    : FromClause{level=1} : com.crossover.medijour.service.Journals (generatedAlias0) -> journals0_
2016-08-15 12:49:36.849 DEBUG 18133 --- [nio-8082-exec-2] o.h.h.i.ast.tree.FromReferenceNode       : Resolved : generatedAlias0 -> journals0_.id
2016-08-15 12:49:36.849 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select : finishing up [level=1, statement=select]
2016-08-15 12:49:36.849 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.ast.HqlSqlWalker        : processQuery() :  ( SELECT ( {select clause} ( count journals0_.id ) ) ( FromClause{level=1} journals journals0_ ) )
2016-08-15 12:49:36.850 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.ast.util.JoinProcessor  : Using FROM fragment [journals journals0_]
2016-08-15 12:49:36.850 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.antlr.HqlSqlBaseWalker  : select >> end [level=1, statement=select]
2016-08-15 12:49:36.851 DEBUG 18133 --- [nio-8082-exec-2] o.h.h.internal.ast.QueryTranslatorImpl   : --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (journals)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[COUNT] CountNode: 'count'
    |  |  \-[ALIAS_REF] IdentNode: 'journals0_.id' {alias=generatedAlias0, className=com.crossover.medijour.service.Journals, tableAlias=journals0_}
    |  \-[SELECT_COLUMNS] SqlNode: ' as col_0_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[journals0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'journals journals0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=journals,tableAlias=journals0_,origin=null,columns={,className=com.crossover.medijour.service.Journals}}

2016-08-15 12:49:36.851 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:49:36.851 DEBUG 18133 --- [nio-8082-exec-2] o.h.h.internal.ast.QueryTranslatorImpl   : HQL: select count(generatedAlias0) from com.crossover.medijour.service.Journals as generatedAlias0
2016-08-15 12:49:36.851 DEBUG 18133 --- [nio-8082-exec-2] o.h.h.internal.ast.QueryTranslatorImpl   : SQL: select count(journals0_.id) as col_0_0_ from journals journals0_
2016-08-15 12:49:36.851 DEBUG 18133 --- [nio-8082-exec-2] o.h.hql.internal.ast.ErrorCounter        : throwQueryException() : no errors
2016-08-15 12:49:36.864 DEBUG 18133 --- [nio-8082-exec-2] org.hibernate.SQL                        : select count(journals0_.id) as col_0_0_ from journals journals0_
2016-08-15 12:49:36.892 DEBUG 18133 --- [nio-8082-exec-2] org.hibernate.loader.Loader              : Result set row: 0
2016-08-15 12:49:36.893 DEBUG 18133 --- [nio-8082-exec-2] org.hibernate.loader.Loader              : Result row: 
2016-08-15 12:49:36.909 DEBUG 18133 --- [nio-8082-exec-2] org.hibernate.SQL                        : select journals0_.id as id1_0_, journals0_.available as availabl2_0_, journals0_.header as header3_0_, journals0_.path as path4_0_, journals0_.pubid as pubid5_0_ from journals journals0_ limit ?
2016-08-15 12:49:36.910 DEBUG 18133 --- [nio-8082-exec-2] org.hibernate.loader.Loader              : Result set row: 0
2016-08-15 12:49:36.912 DEBUG 18133 --- [nio-8082-exec-2] org.hibernate.loader.Loader              : Result row: EntityKey[com.crossover.medijour.service.Journals#1]
2016-08-15 12:49:36.922 DEBUG 18133 --- [nio-8082-exec-2] o.h.engine.internal.TwoPhaseLoad         : Resolving associations for [com.crossover.medijour.service.Journals#1]
2016-08-15 12:49:36.927 DEBUG 18133 --- [nio-8082-exec-2] org.hibernate.SQL                        : select publisher0_.id as id1_1_0_, publisher0_.email as email2_1_0_, publisher0_.name as name3_1_0_, publisher0_.provunq as provunq4_1_0_ from publisher publisher0_ where publisher0_.id=?
2016-08-15 12:49:36.931 DEBUG 18133 --- [nio-8082-exec-2] o.h.l.p.e.p.i.ResultSetProcessorImpl     : Starting ResultSet row #0
2016-08-15 12:49:36.932 DEBUG 18133 --- [nio-8082-exec-2] l.p.e.p.i.EntityReferenceInitializerImpl : On call to EntityIdentifierReaderImpl#resolve, EntityKey was already known; should only happen on root returns with an optional identifier specified
2016-08-15 12:49:36.934 DEBUG 18133 --- [nio-8082-exec-2] o.h.engine.internal.TwoPhaseLoad         : Resolving associations for [com.crossover.medijour.service.Publisher#1]
2016-08-15 12:49:36.944 DEBUG 18133 --- [nio-8082-exec-2] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.crossover.medijour.service.Publisher#1]
2016-08-15 12:49:36.945 DEBUG 18133 --- [nio-8082-exec-2] .l.e.p.AbstractLoadPlanBasedEntityLoader : Done entity load : com.crossover.medijour.service.Publisher#1
2016-08-15 12:49:36.946 DEBUG 18133 --- [nio-8082-exec-2] o.h.engine.internal.TwoPhaseLoad         : Done materializing entity [com.crossover.medijour.service.Journals#1]
2016-08-15 12:49:36.949 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.t.spi.AbstractTransactionImpl      : committing
2016-08-15 12:49:36.949 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.t.internal.jdbc.JdbcTransaction    : committed JDBC Connection
2016-08-15 12:49:36.949 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.t.internal.jdbc.JdbcTransaction    : re-enabling autocommit
2016-08-15 12:49:37.062 DEBUG 18133 --- [nio-8082-exec-2] stractLoadPlanBasedCollectionInitializer : Loading collection: [com.crossover.medijour.service.Publisher.journals#1]
2016-08-15 12:49:37.062 DEBUG 18133 --- [nio-8082-exec-2] org.hibernate.SQL                        : select journals0_.pubid as pubid5_1_0_, journals0_.id as id1_0_0_, journals0_.id as id1_0_1_, journals0_.available as availabl2_0_1_, journals0_.header as header3_0_1_, journals0_.path as path4_0_1_, journals0_.pubid as pubid5_0_1_ from journals journals0_ where journals0_.pubid=?
2016-08-15 12:49:37.063 DEBUG 18133 --- [nio-8082-exec-2] o.h.l.p.e.p.i.ResultSetProcessorImpl     : Preparing collection intializer : [com.crossover.medijour.service.Publisher.journals#1]
2016-08-15 12:49:37.066 DEBUG 18133 --- [nio-8082-exec-2] o.h.l.p.e.p.i.ResultSetProcessorImpl     : Starting ResultSet row #0
2016-08-15 12:49:37.066 DEBUG 18133 --- [nio-8082-exec-2] e.p.i.CollectionReferenceInitializerImpl : Found row of collection: [com.crossover.medijour.service.Publisher.journals#1]
2016-08-15 12:49:37.067 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.l.internal.CollectionLoadContext   : 1 collections were found in result set for role: com.crossover.medijour.service.Publisher.journals
2016-08-15 12:49:37.067 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.l.internal.CollectionLoadContext   : Collection fully initialized: [com.crossover.medijour.service.Publisher.journals#1]
2016-08-15 12:49:37.067 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.l.internal.CollectionLoadContext   : 1 collections initialized for role: com.crossover.medijour.service.Publisher.journals
2016-08-15 12:49:37.067 DEBUG 18133 --- [nio-8082-exec-2] stractLoadPlanBasedCollectionInitializer : Done loading collection
2016-08-15 12:49:37.135 DEBUG 18133 --- [nio-8082-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolving exception from handler [public org.springframework.data.domain.Page<com.crossover.medijour.service.Journals> com.crossover.medijour.service.ListingController.findJournalsForPublicUsers(int,int)]: org.springframework.http.converter.HttpMessageNotWritableException: Could not write content: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"])
2016-08-15 12:49:37.140 DEBUG 18133 --- [nio-8082-exec-2] .w.s.m.a.ResponseStatusExceptionResolver : Resolving exception from handler [public org.springframework.data.domain.Page<com.crossover.medijour.service.Journals> com.crossover.medijour.service.ListingController.findJournalsForPublicUsers(int,int)]: org.springframework.http.converter.HttpMessageNotWritableException: Could not write content: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"])
2016-08-15 12:49:37.148 DEBUG 18133 --- [nio-8082-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Resolving exception from handler [public org.springframework.data.domain.Page<com.crossover.medijour.service.Journals> com.crossover.medijour.service.ListingController.findJournalsForPublicUsers(int,int)]: org.springframework.http.converter.HttpMessageNotWritableException: Could not write content: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"])
2016-08-15 12:49:37.153  WARN 18133 --- [nio-8082-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Failed to write HTTP message: org.springframework.http.converter.HttpMessageNotWritableException: Could not write content: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"])
2016-08-15 12:49:37.162  WARN 18133 --- [nio-8082-exec-2] .w.s.m.s.DefaultHandlerExceptionResolver : Handling of [org.springframework.http.converter.HttpMessageNotWritableException] resulted in Exception

java.lang.IllegalStateException: Cannot call sendError() after the response has been committed
	at org.apache.catalina.connector.ResponseFacade.sendError(ResponseFacade.java:478) ~[tomcat-embed-core-8.0.33.jar:8.0.33]
	at javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:129) ~[tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.sendServerError(DefaultHandlerExceptionResolver.java:488) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.handleHttpMessageNotWritable(DefaultHandlerExceptionResolver.java:402) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver.doResolveException(DefaultHandlerExceptionResolver.java:146) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:137) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:74) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1185) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1022) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:973) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:895) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:967) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:858) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:843) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:261) [spring-boot-actuator-1.3.5.RELEASE.jar:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at com.auth0.spring.security.api.Auth0CORSFilter.doFilter(Auth0CORSFilter.java:21) [auth0-spring-security-api-0.0.3.jar:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at com.auth0.spring.security.api.Auth0CORSFilter.doFilter(Auth0CORSFilter.java:21) [auth0-spring-security-api-0.0.3.jar:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:115) [spring-boot-actuator-1.3.5.RELEASE.jar:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:122) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:48) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:120) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at com.auth0.spring.security.api.Auth0AuthenticationFilter.doFilter(Auth0AuthenticationFilter.java:51) [auth0-spring-security-api-0.0.3.jar:na]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at com.auth0.spring.security.api.Auth0CORSFilter.doFilter(Auth0CORSFilter.java:21) [auth0-spring-security-api-0.0.3.jar:na]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.debug.DebugFilter.invokeWithWrappedRequest(DebugFilter.java:75) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.debug.DebugFilter.doFilter(DebugFilter.java:62) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103) [spring-boot-actuator-1.3.5.RELEASE.jar:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_91]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_91]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_91]

2016-08-15 12:49:37.163 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.j.internal.LogicalConnectionImpl   : Releasing JDBC connection
2016-08-15 12:49:37.163 DEBUG 18133 --- [nio-8082-exec-2] o.h.e.j.internal.LogicalConnectionImpl   : Released JDBC connection
2016-08-15 12:49:37.175 DEBUG 18133 --- [nio-8082-exec-2] o.s.web.servlet.DispatcherServlet        : Could not complete request

org.springframework.http.converter.HttpMessageNotWritableException: Could not write content: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"])
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:276) ~[spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:100) ~[spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:222) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:153) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:165) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81) ~[spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:126) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:832) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:743) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:961) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:895) ~[spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:967) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:858) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:622) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:843) [spring-webmvc-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:729) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:292) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.EndpointWebMvcAutoConfiguration$ApplicationContextHeaderFilter.doFilterInternal(EndpointWebMvcAutoConfiguration.java:261) [spring-boot-actuator-1.3.5.RELEASE.jar:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at com.auth0.spring.security.api.Auth0CORSFilter.doFilter(Auth0CORSFilter.java:21) [auth0-spring-security-api-0.0.3.jar:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at com.auth0.spring.security.api.Auth0CORSFilter.doFilter(Auth0CORSFilter.java:21) [auth0-spring-security-api-0.0.3.jar:na]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:115) [spring-boot-actuator-1.3.5.RELEASE.jar:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:316) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:126) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:90) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:114) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:122) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:169) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:48) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:120) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at com.auth0.spring.security.api.Auth0AuthenticationFilter.doFilter(Auth0AuthenticationFilter.java:51) [auth0-spring-security-api-0.0.3.jar:na]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at com.auth0.spring.security.api.Auth0CORSFilter.doFilter(Auth0CORSFilter.java:21) [auth0-spring-security-api-0.0.3.jar:na]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.debug.DebugFilter.invokeWithWrappedRequest(DebugFilter.java:75) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.security.web.debug.DebugFilter.doFilter(DebugFilter.java:62) [spring-security-web-4.0.4.RELEASE.jar:4.0.4.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103) [spring-boot-actuator-1.3.5.RELEASE.jar:1.3.5.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-4.2.6.RELEASE.jar:4.2.6.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:522) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1095) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:672) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1502) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1458) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_91]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_91]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.0.33.jar:8.0.33]
	at java.lang.Thread.run(Thread.java:745) [na:1.8.0_91]
Caused by: com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"])
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:689) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
Caused by: java.lang.StackOverflowError: null
	at java.lang.ClassLoader.defineClass1(Native Method) ~[na:1.8.0_91]
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763) ~[na:1.8.0_91]
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142) ~[na:1.8.0_91]
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467) ~[na:1.8.0_91]
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73) ~[na:1.8.0_91]
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368) ~[na:1.8.0_91]
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362) ~[na:1.8.0_91]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_91]
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361) ~[na:1.8.0_91]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_91]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_91]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:691) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]

2016-08-15 12:49:37.194 ERROR 18133 --- [nio-8082-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.http.converter.HttpMessageNotWritableException: Could not write content: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"])] with root cause

java.lang.StackOverflowError: null
	at java.lang.ClassLoader.defineClass1(Native Method) ~[na:1.8.0_91]
	at java.lang.ClassLoader.defineClass(ClassLoader.java:763) ~[na:1.8.0_91]
	at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142) ~[na:1.8.0_91]
	at java.net.URLClassLoader.defineClass(URLClassLoader.java:467) ~[na:1.8.0_91]
	at java.net.URLClassLoader.access$100(URLClassLoader.java:73) ~[na:1.8.0_91]
	at java.net.URLClassLoader$1.run(URLClassLoader.java:368) ~[na:1.8.0_91]
	at java.net.URLClassLoader$1.run(URLClassLoader.java:362) ~[na:1.8.0_91]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_91]
	at java.net.URLClassLoader.findClass(URLClassLoader.java:361) ~[na:1.8.0_91]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_91]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_91]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:691) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serializeContents(CollectionSerializer.java:149) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:111) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.CollectionSerializer.serialize(CollectionSerializer.java:24) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanPropertyWriter.serializeAsField(BeanPropertyWriter.java:693) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.std.BeanSerializerBase.serializeFields(BeanSerializerBase.java:675) ~[jackson-databind-2.6.6.jar:2.6.6]
	at com.fasterxml.jackson.databind.ser.BeanSerializer.serialize(BeanSerializer.java:157) ~[jackson-databind-2.6.6.jar:2.6.6]

2016-08-15 12:49:37.204  INFO 18133 --- [nio-8082-exec-2] Spring Security Debugger                 : 

************************************************************

Request received for GET '/listing':

org.apache.catalina.core.ApplicationHttpRequest@1f61207

servletPath:/listing
pathInfo:null
headers: 
host: localhost:8082
connection: keep-alive
accept: application/json
origin: http://localhost:3000
user-agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.87 Safari/537.36
authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJST0xFX0FETUlOIiwiUk9MRV9VU0VSIl0sInVzZXJfaWQiOiJhdXRoMHw1Nzg2NTZlM2FhZmNjMDlhNTQwZTQ4MjIiLCJuYW1lIjoibWVkaWpvdXJAZ21haWwuY29tIiwibmlja25hbWUiOiJtZWRpam91ciIsImVtYWlsIjoibWVkaWpvdXJAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci8yOTFmYTE4YjhjNWQzZTJjNzlhZDU3MDE4ZGZlYmExND9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm1lLnBuZyIsImlzcyI6Imh0dHBzOi8vZGVzYXZlcmEuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDU3ODY1NmUzYWFmY2MwOWE1NDBlNDgyMiIsImF1ZCI6IlVxZWdDbmR4R1dWOFNqNXI0NGxaTmxUSnVUSndNWENPIiwiZXhwIjoxNDcxMzEyMTc0LCJpYXQiOjE0NzEyNzYxNzR9.X3OM7os2YiR6yZlAZ3-40bqIeVj8UQelY2mKWG-RuJw
referer: http://localhost:3000/
accept-encoding: gzip, deflate, sdch
accept-language: pt-BR,pt;q=0.8,en-US;q=0.6,en;q=0.4


Security filter chain: [
  WebAsyncManagerIntegrationFilter
  Auth0CORSFilter
  SecurityContextPersistenceFilter
  Auth0AuthenticationFilter
  HeaderWriterFilter
  LogoutFilter
  RequestCacheAwareFilter
  SecurityContextHolderAwareRequestFilter
  AnonymousAuthenticationFilter
  SessionManagementFilter
  ExceptionTranslationFilter
  FilterSecurityInterceptor
]


************************************************************


2016-08-15 12:49:37.205  INFO 18133 --- [nio-8082-exec-2] c.a.s.s.api.Auth0AuthenticationProvider  : Trying to authenticate with token: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJyb2xlcyI6WyJST0xFX0FETUlOIiwiUk9MRV9VU0VSIl0sInVzZXJfaWQiOiJhdXRoMHw1Nzg2NTZlM2FhZmNjMDlhNTQwZTQ4MjIiLCJuYW1lIjoibWVkaWpvdXJAZ21haWwuY29tIiwibmlja25hbWUiOiJtZWRpam91ciIsImVtYWlsIjoibWVkaWpvdXJAZ21haWwuY29tIiwiZW1haWxfdmVyaWZpZWQiOnRydWUsInBpY3R1cmUiOiJodHRwczovL3MuZ3JhdmF0YXIuY29tL2F2YXRhci8yOTFmYTE4YjhjNWQzZTJjNzlhZDU3MDE4ZGZlYmExND9zPTQ4MCZyPXBnJmQ9aHR0cHMlM0ElMkYlMkZjZG4uYXV0aDAuY29tJTJGYXZhdGFycyUyRm1lLnBuZyIsImlzcyI6Imh0dHBzOi8vZGVzYXZlcmEuYXV0aDAuY29tLyIsInN1YiI6ImF1dGgwfDU3ODY1NmUzYWFmY2MwOWE1NDBlNDgyMiIsImF1ZCI6IlVxZWdDbmR4R1dWOFNqNXI0NGxaTmxUSnVUSndNWENPIiwiZXhwIjoxNDcxMzEyMTc0LCJpYXQiOjE0NzEyNzYxNzR9.X3OM7os2YiR6yZlAZ3-40bqIeVj8UQelY2mKWG-RuJw
2016-08-15 12:49:37.206 DEBUG 18133 --- [nio-8082-exec-2] o.s.web.servlet.DispatcherServlet        : DispatcherServlet with name 'dispatcherServlet' processing GET request for [/error]
2016-08-15 12:49:37.208 DEBUG 18133 --- [nio-8082-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Looking up handler method for path /error
2016-08-15 12:49:37.208 DEBUG 18133 --- [nio-8082-exec-2] s.w.s.m.m.a.RequestMappingHandlerMapping : Returning handler method [public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
2016-08-15 12:49:37.209 DEBUG 18133 --- [nio-8082-exec-2] o.s.web.servlet.DispatcherServlet        : Last-Modified value for [/error] is: -1
2016-08-15 12:49:37.209 DEBUG 18133 --- [nio-8082-exec-2] o.s.web.cors.DefaultCorsProcessor        : Skip CORS processing: response already contains "Access-Control-Allow-Origin" header
2016-08-15 12:49:37.243 DEBUG 18133 --- [nio-8082-exec-2] o.s.w.s.m.m.a.HttpEntityMethodProcessor  : Written [{timestamp=Mon Aug 15 12:49:37 BRT 2016, status=200, error=OK, exception=org.springframework.http.converter.HttpMessageNotWritableException, message=Could not write content: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]); nested exception is com.fasterxml.jackson.databind.JsonMappingException: Infinite recursion (StackOverflowError) (through reference chain: com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]->com.crossover.medijour.service.Publisher["journals"]->org.hibernate.collection.internal.PersistentBag[0]->com.crossover.medijour.service.Journals["publisher"]), path=/listing}] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@19bd0c4d]
2016-08-15 12:49:37.245 DEBUG 18133 --- [nio-8082-exec-2] o.s.web.servlet.DispatcherServlet        : Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
2016-08-15 12:49:37.245 DEBUG 18133 --- [nio-8082-exec-2] o.s.web.servlet.DispatcherServlet        : Successfully completed request
2016-08-15 12:52:07.186  INFO 18133 --- [       Thread-3] ationConfigEmbeddedWebApplicationContext : Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@490c293f: startup date [Mon Aug 15 12:48:31 BRT 2016]; root of context hierarchy
2016-08-15 12:52:07.202  INFO 18133 --- [       Thread-3] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2016-08-15 12:52:07.222  INFO 18133 --- [       Thread-3] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2016-08-15 12:52:07.226  INFO 18133 --- [       Thread-3] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2016-08-15 12:52:07.226 DEBUG 18133 --- [       Thread-3] o.hibernate.internal.SessionFactoryImpl  : HHH000031: Closing
2016-08-15 12:52:07.227 DEBUG 18133 --- [       Thread-3] o.h.s.i.AbstractServiceRegistryImpl      : Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
2016-08-15 12:52:07.227 DEBUG 18133 --- [       Thread-3] o.h.b.r.i.BootstrapServiceRegistryImpl   : Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
2016-08-15 12:52:07.227 DEBUG 18133 --- [       Thread-3] o.h.j.i.EntityManagerFactoryRegistry     : Remove: name=default
